{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/table.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/paginator.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/tooltip.js"],"names":["_c0","_c1","CdkTextColumn_th_1_Template","rf","ctx","ctx_r0","justify","headerText","CdkTextColumn_td_2_Template","data_r2","$implicit","ctx_r1","dataAccessor","name","CanStick","mixinHasStickyInput","base","args","_sticky","_hasStickyChanged","hasStickyChanged","v","prevValue","CDK_TABLE","TextColumnOptions","TEXT_COLUMN_OPTIONS","CellDef","CdkCellDef","template","ɵfac","CdkCellDef_Factory","t","ɵdir","type","selectors","ctorParameters","selector","CdkHeaderCellDef","CdkHeaderCellDef_Factory","CdkFooterCellDef","CdkFooterCellDef_Factory","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_table","_stickyEnd","_name","cssClassFriendlyName","replace","CdkColumnDef_Factory","contentQueries","CdkColumnDef_ContentQueries","dirIndex","_t","cell","first","headerCell","footerCell","inputs","sticky","stickyEnd","features","provide","useExisting","undefined","decorators","propDecorators","providers","BaseCdkCell","columnDef","elementRef","columnClassName","nativeElement","classList","add","CdkHeaderCell","CdkHeaderCell_Factory","hostAttrs","host","CdkFooterCell","CdkFooterCell_Factory","CdkCell","CdkCell_Factory","CDK_ROW_TEMPLATE","BaseRowDef","_differs","changes","_columnsDiffer","columns","currentValue","find","create","diff","column","CdkHeaderRowDef","CdkFooterRowDef","BaseRowDef_Factory","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkHeaderRowDef_Factory","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkFooterRowDef_Factory","CdkRowDef","CdkRowDef_Factory","when","CdkCellOutletRowContext","CdkCellOutletMultiRowContext","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","CdkCellOutlet_Factory","CdkHeaderRow","CdkHeaderRow_Factory","ɵcmp","decls","vars","consts","CdkHeaderRow_Template","directives","encapsulation","changeDetection","Default","None","CdkFooterRow","CdkFooterRow_Factory","CdkFooterRow_Template","CdkRow","CdkRow_Factory","CdkRow_Template","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_isBrowser","rows","stickyDirections","row","nodeType","ELEMENT_NODE","_removeStickyStyle","i","children","length","stickyStartStates","stickyEndStates","hasStickyColumns","some","state","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","isRtl","_addStickyStyle","rowsToStick","stickyStates","position","reverse","stickyHeight","rowIndex","j","getBoundingClientRect","height","tableElement","tfoot","querySelector","element","dir","style","zIndex","_getCalculatedZIndex","hasDirection","remove","dirValue","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","push","width","widths","positions","nextPosition","getTableUnknownColumnError","id","Error","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","data","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","RowOutlet","DataRowOutlet","viewContainer","DataRowOutlet_Factory","HeaderRowOutlet","HeaderRowOutlet_Factory","FooterRowOutlet","FooterRowOutlet_Factory","CDK_TABLE_TEMPLATE","RowContext","RowViewRef","RenderRow","CdkTable","_changeDetectorRef","_elementRef","role","_dir","_document","_platform","_onDestroy","_columnDefsByName","Map","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_cachedRenderRowsMap","stickyCssClass","_multiTemplateDataRows","viewChange","start","end","Number","MAX_VALUE","setAttribute","nodeName","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","trackBy","dataIndex","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","_renderUpdatedColumns","_forceRenderHeaderRows","_forceRenderFooterRows","dataSource","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","_rowOutlet","clear","_headerRowOutlet","_footerRowOutlet","next","complete","disconnect","_renderRows","_getAllRenderRows","forEachOperation","record","prevIndex","currentIndex","previousIndex","_insertRow","item","view","get","move","_updateRowIndexContext","forEachIdentityChange","rowView","context","updateStickyColumnStyles","headerRowDef","footerRowDef","rowDef","headerRows","_getRenderedRows","thead","display","map","def","_stickyStyler","clearStickyPositioning","stickRows","forEach","resetStickyChanged","footerRows","updateStickyFooterContainer","dataRows","headerRow","_addStickyColumnStyles","footerRow","Array","from","values","renderRows","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","has","set","WeakMap","renderRow","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","filter","multiTemplateDataRows","_defaultRowDef","columnsDiffReducer","acc","getColumnsDiff","reduce","_forceRenderDataRows","unsubscribe","_dataSource","dataStream","connect","isArray","pipe","subscribe","_renderRow","updateStickyHeaderRowStyles","updateStickyFooterRowStyles","columnName","updateStickyColumns","rowOutlet","renderedRows","viewRef","rootNodes","renderIndex","outlet","index","createEmbeddedView","_getCellTemplates","cellTemplate","markForCheck","count","last","even","odd","columnId","extractCellTemplate","documentFragment","createDocumentFragment","sections","tag","section","createElement","appendChild","stickyCheckReducer","d","value","isBrowser","change","items","_trackByFn","fn","console","warn","_switchDataSource","CdkTable_Factory","CdkTable_ContentQueries","viewQuery","CdkTable_Query","exportAs","ngContentSelectors","CdkTable_Template","String","descendants","array","concat","CdkTextColumn","_options","_syncColumnDefName","_createDefaultHeaderText","defaultDataAccessor","addColumnDef","removeColumnDef","defaultHeaderTextTransform","toUpperCase","slice","CdkTextColumn_Factory","CdkTextColumn_Query","CdkTextColumn_Template","EXPORTED_DECLARATIONS","CdkTableModule","ɵmod","ɵinj","factory","CdkTableModule_Factory","ngJitMode","declarations","exports","MatPaginator_div_2_mat_form_field_3_mat_option_2_Template","pageSizeOption_r6","MatPaginator_div_2_mat_form_field_3_Template","_r8","MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener","$event","ctx_r7","_changePageSize","ctx_r3","color","pageSize","disabled","_intl","itemsPerPageLabel","_displayedPageSizeOptions","MatPaginator_div_2_div_4_Template","ctx_r4","MatPaginator_div_2_Template","MatPaginator_button_6_Template","_r10","MatPaginator_button_6_Template_button_click_0_listener","ctx_r9","firstPage","firstPageLabel","_previousButtonsDisabled","MatPaginator_button_13_Template","_r12","MatPaginator_button_13_Template_button_click_0_listener","ctx_r11","lastPage","ctx_r2","lastPageLabel","_nextButtonsDisabled","MatPaginatorIntl","nextPageLabel","previousPageLabel","getRangeLabel","page","Math","max","startIndex","endIndex","min","MatPaginatorIntl_Factory","ɵprov","token","providedIn","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_INTL_PROVIDER","deps","useFactory","DEFAULT_PAGE_SIZE","PageEvent","MatPaginatorDefaultOptions","MAT_PAGINATOR_DEFAULT_OPTIONS","MatPaginatorBase","_MatPaginatorBase","MatPaginator","defaults","_pageIndex","_length","_pageSizeOptions","_hidePageSize","_showFirstLastButtons","_intlChanges","pageSizeOptions","hidePageSize","showFirstLastButtons","_pageSize","_initialized","_updateDisplayedPageSizeOptions","_markInitialized","hasNextPage","previousPageIndex","pageIndex","_emitPageEvent","hasPreviousPage","getNumberOfPages","maxPageIndex","ceil","floor","indexOf","sort","a","b","emit","p","MatPaginator_Factory","outputs","MatPaginator_Template","MatPaginator_Template_button_click_7_listener","previousPage","MatPaginator_Template_button_click_10_listener","nextPage","styles","OnPush","MatPaginatorModule","MatPaginatorModule_Factory","imports","MatSelect_span_4_Template","placeholder","MatSelect_span_5_span_1_Template","ctx_r5","triggerValue","MatSelect_span_5_2_Template","MatSelect_span_5_Template","customTrigger","MatSelect_ng_template_8_Template","_r9","MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener","ctx_r8","_panelDoneAnimatingStream","toState","MatSelect_ng_template_8_Template_div_keydown_1_listener","ctx_r10","_handleKeydown","_getPanelTheme","_transformOrigin","_triggerFontSize","panelClass","multiple","_c2","_c3","matSelectAnimations","transformPanelWrap","optional","transformPanel","transform","minWidth","opacity","getMatSelectDynamicMultipleError","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","nextUniqueId","SELECT_PANEL_MAX_HEIGHT","SELECT_PANEL_PADDING_X","SELECT_PANEL_INDENT_PADDING_X","SELECT_ITEM_HEIGHT_EM","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_VIEWPORT_PADDING","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","overlay","scrollStrategies","reposition","MatSelectConfig","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MatSelectChange","source","MatSelectBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_MatSelectMixinBase","MatSelectTrigger","MatSelectTrigger_Factory","MatSelect","_viewportRuler","_ngZone","_parentFormField","tabIndex","scrollStrategyFactory","_liveAnnouncer","_panelOpen","_required","_scrollTop","_multiple","_compareWith","o1","o2","_uid","_destroy","_onChange","_onTouched","_optionIds","_offsetY","_positions","originX","originY","overlayX","overlayY","_disableOptionCentering","_focused","controlType","ariaLabel","optionSelectionChanges","options","option","onSelectionChange","onStable","asObservable","openedChange","_openedStream","o","_closedStream","selectionChange","valueChange","valueAccessor","_scrollStrategyFactory","_scrollStrategy","parseInt","disableOptionCentering","typeaheadDebounceInterval","_selectionModel","stateChanges","panelOpen","overlayDir","offsetX","_triggerRect","trigger","_initKeyManager","changed","event","added","select","removed","deselect","_resetOptions","_initializeSelection","updateErrorState","_keyManager","withTypeAhead","_typeaheadDebounceInterval","close","open","getComputedStyle","fontSize","withHorizontalOrientation","_calculateOverlayPosition","_highlightCorrectOption","overlayRef","overlayElement","_isRtl","_setSelectionByValue","isDisabled","_handleOpenKeydown","_handleClosedKeydown","keyCode","isArrowKey","isOpenKey","manager","isTyping","altKey","preventDefault","previouslySelectedOption","selected","setFirstItemActive","setLastItemActive","onKeydown","selectedOption","announce","viewValue","activeItem","_selectViaInteraction","ctrlKey","hasDeselectedOptions","opt","previouslyFocusedIndex","activeItemIndex","shiftKey","positionChange","detectChanges","_calculateOverlayOffsetX","panel","scrollTop","Promise","resolve","then","_value","_selectValue","_sortValues","correspondingOption","setActiveItem","error","withVerticalOrientation","withAllowedModifierKeys","tabOut","focus","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","_setOptionIds","wasSelected","isSelected","_propagateChanges","toArray","sortComparator","fallbackValue","valueToEmit","join","empty","activeOptionIndex","labelCount","optionGroups","_getItemHeight","result","current","itemHeight","_getItemCount","panelHeight","scrollContainerHeight","maxScroll","selectedOptionOffset","_getOptionIndex","scrollBuffer","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","selectedIndex","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","ariaLabelledby","_hasFloatingLabel","_getAriaLabel","_labelId","overlayRect","viewportSize","getViewportSize","paddingWidth","group","leftOverflow","rightOverflow","round","updatePosition","optionHeightAdjustment","maxOptionsDisplayed","optionOffsetFromPanelTop","firstDisplayedIndex","selectedDisplayIndex","partialItemHeight","topSpaceAvailable","bottomSpaceAvailable","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","ids","_ariaDescribedby","_placeholder","newValue","writeValue","_id","selectedOptions","isEmpty","MatSelect_Factory","MatSelect_ContentQueries","MatSelect_Query","hostVars","hostBindings","MatSelect_HostBindings","MatSelect_keydown_HostBindingHandler","MatSelect_focus_HostBindingHandler","_onFocus","MatSelect_blur_HostBindingHandler","_onBlur","_getAriaLabelledby","required","toString","errorState","_getAriaActiveDescendant","disableRipple","compareWith","errorStateMatcher","MatSelect_Template","MatSelect_Template_div_click_0_listener","toggle","MatSelect_Template_ng_template_backdropClick_8_listener","MatSelect_Template_ng_template_attach_8_listener","_onAttached","MatSelect_Template_ng_template_detach_8_listener","_r0","animation","animations","MatSelectModule","MatSelectModule_Factory","MatTextColumn_th_1_Template","MatTextColumn_td_2_Template","MatTable","arguments","MatTable_Factory","ɵMatTable_BaseFactory","MatTable_Template","MatCellDef","MatCellDef_Factory","ɵMatCellDef_BaseFactory","MatHeaderCellDef","MatHeaderCellDef_Factory","ɵMatHeaderCellDef_BaseFactory","MatFooterCellDef","MatFooterCellDef_Factory","ɵMatFooterCellDef_BaseFactory","MatColumnDef","MatColumnDef_Factory","ɵMatColumnDef_BaseFactory","MatHeaderCell","MatHeaderCell_Factory","MatFooterCell","MatFooterCell_Factory","MatCell","MatCell_Factory","MatHeaderRowDef","MatHeaderRowDef_Factory","ɵMatHeaderRowDef_BaseFactory","MatFooterRowDef","MatFooterRowDef_Factory","ɵMatFooterRowDef_BaseFactory","MatRowDef","MatRowDef_Factory","ɵMatRowDef_BaseFactory","MatHeaderRow","MatHeaderRow_Factory","ɵMatHeaderRow_BaseFactory","MatHeaderRow_Template","MatFooterRow","MatFooterRow_Factory","ɵMatFooterRow_BaseFactory","MatFooterRow_Template","MatRow","MatRow_Factory","ɵMatRow_BaseFactory","MatRow_Template","MatTextColumn","MatTextColumn_Factory","ɵMatTextColumn_BaseFactory","MatTextColumn_Template","MatTableModule","MatTableModule_Factory","MAX_SAFE_INTEGER","MatTableDataSource","initialData","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","EMPTY","sortingDataAccessor","sortHeaderId","numberValue","sortData","active","valueA","valueB","comparatorResult","filterPredicate","dataStr","Object","keys","currentTerm","key","toLowerCase","transformedFilter","trim","_updateChangeSubscription","sortChange","_sort","initialized","pageChange","_paginator","filteredData","_filterData","orderedData","_orderData","paginatedData","_pageData","obj","paginator","_updatePaginator","filteredDataLength","lastPageIndex","newPageIndex","matTooltipAnimations","tooltipState","offset","SCROLL_THROTTLE_MS","TOOLTIP_PANEL_CLASS","passiveListenerOptions","passive","LONGPRESS_DELAY","getMatTooltipInvalidPositionError","MAT_TOOLTIP_SCROLL_STRATEGY","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","scrollThrottle","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","MatTooltipDefaultOptions","MAT_TOOLTIP_DEFAULT_OPTIONS","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","MatTooltip","_overlay","_scrollDispatcher","_viewContainerRef","_ariaDescriber","_focusMonitor","scrollStrategy","_defaultOptions","_hammerLoader","_position","_disabled","touchGestures","_message","_passiveListeners","_destroyed","_isTooltipVisible","stopPropagation","run","hide","monitor","origin","show","runOutsideAngular","addEventListener","_setupPointerEvents","clearTimeout","_touchstartTimeout","_overlayRef","dispose","_tooltipInstance","removeEventListener","listener","removeDescription","message","stopMonitoring","delay","_showTimeoutId","_hideTimeoutId","_createOverlay","_detach","_portal","TooltipComponent","attach","instance","afterHidden","_setTooltipClass","_tooltipClass","_updateTooltipMessage","isVisible","scrollableAncestors","getAncestorScrollContainers","strategy","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withScrollableContainers","positionChanges","scrollableViewProperties","isOverlayClipped","positionStrategy","_updatePosition","detachments","hasAttached","detach","getConfig","_getOrigin","_getOverlayPosition","withPositions","assign","main","fallback","isLtr","originPosition","_invertPosition","x","y","overlayPosition","_markForCheck","onMicrotaskEmpty","tooltipClass","IOS","ANDROID","_disableNativeGesturesIfNecessary","touchendListener","setTimeout","gestures","userSelect","msUserSelect","webkitUserSelect","MozUserSelect","draggable","webkitUserDrag","touchAction","webkitTapHighlightColor","describe","MatTooltip_Factory","_breakpointObserver","_visibility","_closeOnInteraction","_onHide","_isHandset","observe","Handset","TooltipComponent_Factory","TooltipComponent_HostBindings","TooltipComponent_click_HostBindingHandler","_handleBodyInteraction","TooltipComponent_Template","TooltipComponent_Template_div_animation_state_start_0_listener","_animationStart","TooltipComponent_Template_div_animation_state_done_0_listener","_animationDone","tmp_0_0","currVal_0","matches","pipes","MatTooltipModule","MatTooltipModule_Factory","entryComponents"],"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","file":"default~apps-apps-module~courses-courses-module~departments-departments-module~fees-fees-module~form~f9ab7ea5-es5.js","sourcesContent":["import { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { isDataSource } from '@angular/cdk/collections';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\n\nconst _c0 = [[[\"caption\"]]];\nconst _c1 = [\"caption\"];\nfunction CdkTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n} }\nfunction CdkTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n} }\nexport { DataSource } from '@angular/cdk/collections';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, Inject, Optional, Input, ContentChild, ElementRef, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, isDevMode, ChangeDetectorRef, Attribute, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/can-stick.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a mixin to provide a directive with a function that checks if the sticky input has\n * been changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * \\@docs-private\n * @record\n */\nfunction CanStick() { }\nif (false) {\n    /**\n     * Whether sticky positioning should be applied.\n     * @type {?}\n     */\n    CanStick.prototype.sticky;\n    /**\n     * Whether the sticky input has changed since it was last checked.\n     * @type {?}\n     */\n    CanStick.prototype._hasStickyChanged;\n    /**\n     * Whether the sticky value has changed since this was last called.\n     * @return {?}\n     */\n    CanStick.prototype.hasStickyChanged = function () { };\n    /**\n     * Resets the dirty check for cases where the sticky state has been used without checking.\n     * @return {?}\n     */\n    CanStick.prototype.resetStickyChanged = function () { };\n}\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * \\@docs-private\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /**\n             * Whether the sticky input has changed since it was last checked.\n             */\n            this._hasStickyChanged = false;\n        }\n        /**\n         * Whether sticky positioning should be applied.\n         * @return {?}\n         */\n        get sticky() { return this._sticky; }\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set sticky(v) {\n            /** @type {?} */\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /**\n         * Whether the sticky value has changed since this was last called.\n         * @return {?}\n         */\n        hasStickyChanged() {\n            /** @type {?} */\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /**\n         * Resets the dirty check for cases where the sticky state has been used without checking.\n         * @return {?}\n         */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/tokens.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/**\n * Configurable options for `CdkTextColumn`.\n * @record\n * @template T\n */\nfunction TextColumnOptions() { }\nif (false) {\n    /**\n     * Default function that provides the header text based on the column name if a header\n     * text is not provided.\n     * @type {?|undefined}\n     */\n    TextColumnOptions.prototype.defaultHeaderTextTransform;\n    /**\n     * Default data accessor to use if one is not provided.\n     * @type {?|undefined}\n     */\n    TextColumnOptions.prototype.defaultDataAccessor;\n}\n/**\n * Injection token that can be used to specify the text column options.\n * @type {?}\n */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/cell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base interface for a cell definition. Captures a column's cell template definition.\n * @record\n */\nfunction CellDef() { }\nif (false) {\n    /** @type {?} */\n    CellDef.prototype.template;\n}\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ɵfac = function CdkCellDef_Factory(t) { return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCellDef, selectors: [[\"\", \"cdkCellDef\", \"\"]] });\n/** @nocollapse */\nCdkCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkCellDef.prototype.template;\n}\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) { return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkHeaderCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCellDef, selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]] });\n/** @nocollapse */\nCdkHeaderCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkHeaderCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkHeaderCellDef.prototype.template;\n}\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) { return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkFooterCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCellDef, selectors: [[\"\", \"cdkFooterCellDef\", \"\"]] });\n/** @nocollapse */\nCdkFooterCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkFooterCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkFooterCellDef.prototype.template;\n}\n// Boilerplate for applying mixins to CdkColumnDef.\n/**\n * \\@docs-private\n */\nclass CdkColumnDefBase {\n}\n/** @type {?} */\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    /**\n     * @param {?=} _table\n     */\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /**\n     * Unique name for this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        // If the directive is set without a name (updated programatically), then this setter will\n        // trigger with an empty string and should not overwrite the programatically set value.\n        if (name) {\n            this._name = name;\n            this.cssClassFriendlyName = name.replace(/[^a-z0-9_-]/ig, '-');\n        }\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     * @return {?}\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set stickyEnd(v) {\n        /** @type {?} */\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n}\nCdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) { return new (t || CdkColumnDef)(ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkColumnDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkColumnDef, selectors: [[\"\", \"cdkColumnDef\", \"\"]], contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n    } }, inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkColumnDef.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\nCdkColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['cdkColumnDef',] }],\n    stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\n    cell: [{ type: ContentChild, args: [CdkCellDef,] }],\n    headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef,] }],\n    footerCell: [{ type: ContentChild, args: [CdkFooterCellDef,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkColumnDef]',\n                inputs: ['sticky'],\n                providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['cdkColumnDef']\n        }], stickyEnd: [{\n            type: Input,\n            args: ['stickyEnd']\n        }], cell: [{\n            type: ContentChild,\n            args: [CdkCellDef]\n        }], headerCell: [{\n            type: ContentChild,\n            args: [CdkHeaderCellDef]\n        }], footerCell: [{\n            type: ContentChild,\n            args: [CdkFooterCellDef]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkColumnDef.ngAcceptInputType_sticky;\n    /** @type {?} */\n    CdkColumnDef.ngAcceptInputType_stickyEnd;\n    /** @type {?} */\n    CdkColumnDef.prototype._name;\n    /** @type {?} */\n    CdkColumnDef.prototype._stickyEnd;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.cell;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.headerCell;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.footerCell;\n    /**\n     * Transformed version of the column name that can be used as part of a CSS classname. Excludes\n     * all non-alphanumeric characters and the special characters '-' and '_'. Any characters that\n     * do not match are replaced by the '-' character.\n     * @type {?}\n     */\n    CdkColumnDef.prototype.cssClassFriendlyName;\n    /** @type {?} */\n    CdkColumnDef.prototype._table;\n}\n/**\n * Base class for the cells. Adds a CSS classname that identifies the column it renders in.\n */\nclass BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        /** @type {?} */\n        const columnClassName = `cdk-column-${columnDef.cssClassFriendlyName}`;\n        elementRef.nativeElement.classList.add(columnClassName);\n    }\n}\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass CdkHeaderCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) { return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkHeaderCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCell, selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-header-cell, th[cdk-header-cell]',\n                host: {\n                    'class': 'cdk-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass CdkFooterCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) { return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkFooterCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCell, selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                host: {\n                    'class': 'cdk-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Cell template container that adds the right classes and role.\n */\nclass CdkCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkCell.ɵfac = function CdkCell_Factory(t) { return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCell, selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-cell, td[cdk-cell]',\n                host: {\n                    'class': 'cdk-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/row.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @type {?}\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n * @abstract\n */\nclass BaseRowDef {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            /** @type {?} */\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     * @return {?}\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /**\n     * Gets this row def's relevant cell template from the provided column def.\n     * @param {?} column\n     * @return {?}\n     */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.ɵfac = function BaseRowDef_Factory(t) { ɵngcc0.ɵɵinvalidFactory(); };\nBaseRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BaseRowDef, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n\nif (false) {\n    /**\n     * The columns to be displayed on this row.\n     * @type {?}\n     */\n    BaseRowDef.prototype.columns;\n    /**\n     * Differ used to check if any changes were made to the columns.\n     * @type {?}\n     * @protected\n     */\n    BaseRowDef.prototype._columnsDiffer;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    BaseRowDef.prototype.template;\n    /**\n     * @type {?}\n     * @protected\n     */\n    BaseRowDef.prototype._differs;\n}\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/**\n * \\@docs-private\n */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     * @param {?=} _table\n     */\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) { return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkHeaderRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderRowDef, selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]], inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkHeaderRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkHeaderRowDef]',\n                inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    CdkHeaderRowDef.ngAcceptInputType_sticky;\n    /** @type {?} */\n    CdkHeaderRowDef.prototype._table;\n}\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/**\n * \\@docs-private\n */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     * @param {?=} _table\n     */\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) { return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkFooterRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterRowDef, selectors: [[\"\", \"cdkFooterRowDef\", \"\"]], inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkFooterRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkFooterRowDef]',\n                inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    CdkFooterRowDef.ngAcceptInputType_sticky;\n    /** @type {?} */\n    CdkFooterRowDef.prototype._table;\n}\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     * @param {?=} _table\n     */\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n}\nCdkRowDef.ɵfac = function CdkRowDef_Factory(t) { return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkRowDef, selectors: [[\"\", \"cdkRowDef\", \"\"]], inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkRowDef]',\n                inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Function that should return true if this row template should be used for the provided index\n     * and row data. If left undefined, this row will be considered the default row template to use\n     * when no other when functions return true for the data.\n     * For every row, there must be at least one when function that passes or an undefined to default.\n     * @type {?}\n     */\n    CdkRowDef.prototype.when;\n    /** @type {?} */\n    CdkRowDef.prototype._table;\n}\n/**\n * Context provided to the row cells when `multiTemplateDataRows` is false\n * @record\n * @template T\n */\nfunction CdkCellOutletRowContext() { }\nif (false) {\n    /**\n     * Data for the row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.$implicit;\n    /**\n     * Index of the data object in the provided data array.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.index;\n    /**\n     * Length of the number of total rows.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.count;\n    /**\n     * True if this cell is contained in the first row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.first;\n    /**\n     * True if this cell is contained in the last row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.last;\n    /**\n     * True if this cell is contained in a row with an even-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.even;\n    /**\n     * True if this cell is contained in a row with an odd-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.odd;\n}\n/**\n * Context provided to the row cells when `multiTemplateDataRows` is true. This context is the same\n * as CdkCellOutletRowContext except that the single `index` value is replaced by `dataIndex` and\n * `renderIndex`.\n * @record\n * @template T\n */\nfunction CdkCellOutletMultiRowContext() { }\nif (false) {\n    /**\n     * Data for the row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.$implicit;\n    /**\n     * Index of the data object in the provided data array.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.dataIndex;\n    /**\n     * Index location of the rendered row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.renderIndex;\n    /**\n     * Length of the number of total rows.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.count;\n    /**\n     * True if this cell is contained in the first row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.first;\n    /**\n     * True if this cell is contained in the last row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.last;\n    /**\n     * True if this cell is contained in a row with an even-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.even;\n    /**\n     * True if this cell is contained in a row with an odd-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.odd;\n}\n/**\n * Outlet for rendering cells inside of a row or header row.\n * \\@docs-private\n */\nclass CdkCellOutlet {\n    /**\n     * @param {?} _viewContainer\n     */\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\nCdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) { return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkCellOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCellOutlet, selectors: [[\"\", \"cdkCellOutlet\", \"\"]] });\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\n/** @nocollapse */\nCdkCellOutlet.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, null); })();\nif (false) {\n    /**\n     * Static property containing the latest constructed instance of this class.\n     * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n     * createEmbeddedView. After one of these components are created, this property will provide\n     * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n     * construct the cells with the provided context.\n     * @type {?}\n     */\n    CdkCellOutlet.mostRecentCellOutlet;\n    /**\n     * The ordered list of cells to render within this outlet's view container\n     * @type {?}\n     */\n    CdkCellOutlet.prototype.cells;\n    /**\n     * The data context to be provided to each cell\n     * @type {?}\n     */\n    CdkCellOutlet.prototype.context;\n    /** @type {?} */\n    CdkCellOutlet.prototype._viewContainer;\n}\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) { return new (t || CdkHeaderRow)(); };\nCdkHeaderRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkHeaderRow, selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-header-row, tr[cdk-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkFooterRow {\n}\nCdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) { return new (t || CdkFooterRow)(); };\nCdkFooterRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkFooterRow, selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkRow {\n}\nCdkRow.ɵfac = function CdkRow_Factory(t) { return new (t || CdkRow)(); };\nCdkRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkRow, selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-row, tr[cdk-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/sticky-styler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * \\@docs-private\n * @type {?}\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * \\@docs-private\n */\nclass StickyStyler {\n    /**\n     * @param {?} _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param {?} _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param {?} direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param {?=} _isBrowser Whether the table is currently being rendered on the server or the client.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _isBrowser = true) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._isBrowser = _isBrowser;\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param {?} rows The list of rows that should be cleared from sticking in the provided directions\n     * @param {?} stickyDirections The directions that should no longer be set as sticky on the rows.\n     * @return {?}\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            this._removeStickyStyle(row, stickyDirections);\n            for (let i = 0; i < row.children.length; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                this._removeStickyStyle(cell, stickyDirections);\n            }\n        }\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param {?} rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param {?} stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param {?} stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @return {?}\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates) {\n        /** @type {?} */\n        const hasStickyColumns = stickyStartStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state)) || stickyEndStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state));\n        if (!rows.length || !hasStickyColumns || !this._isBrowser) {\n            return;\n        }\n        /** @type {?} */\n        const firstRow = rows[0];\n        /** @type {?} */\n        const numCells = firstRow.children.length;\n        /** @type {?} */\n        const cellWidths = this._getCellWidths(firstRow);\n        /** @type {?} */\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        /** @type {?} */\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        /** @type {?} */\n        const isRtl = this.direction === 'rtl';\n        for (const row of rows) {\n            for (let i = 0; i < numCells; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                if (stickyStartStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'right' : 'left', startPositions[i]);\n                }\n                if (stickyEndStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'left' : 'right', endPositions[i]);\n                }\n            }\n        }\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param {?} rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param {?} stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param {?} position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     * @return {?}\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on.\n        /** @type {?} */\n        const rows = position === 'bottom' ? rowsToStick.reverse() : rowsToStick;\n        /** @type {?} */\n        let stickyHeight = 0;\n        for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n            if (!stickyStates[rowIndex]) {\n                continue;\n            }\n            /** @type {?} */\n            const row = rows[rowIndex];\n            if (this._isNativeHtmlTable) {\n                for (let j = 0; j < row.children.length; j++) {\n                    /** @type {?} */\n                    const cell = (/** @type {?} */ (row.children[j]));\n                    this._addStickyStyle(cell, position, stickyHeight);\n                }\n            }\n            else {\n                // Flex does not respect the stick positioning on the cells, needs to be applied to the row.\n                // If this is applied on a native table, Safari causes the header to fly in wrong direction.\n                this._addStickyStyle(row, position, stickyHeight);\n            }\n            if (rowIndex === rows.length - 1) {\n                // prevent unnecessary reflow from getBoundingClientRect()\n                return;\n            }\n            stickyHeight += row.getBoundingClientRect().height;\n        }\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     * @param {?} tableElement\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        /** @type {?} */\n        const tfoot = (/** @type {?} */ (tableElement.querySelector('tfoot')));\n        if (stickyStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => !state))) {\n            this._removeStickyStyle(tfoot, ['bottom']);\n        }\n        else {\n            this._addStickyStyle(tfoot, 'bottom', 0);\n        }\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     * @param {?} element\n     * @param {?} stickyDirections\n     * @return {?}\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n        }\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        /** @type {?} */\n        const hasDirection = STICKY_DIRECTIONS.some((/**\n         * @param {?} dir\n         * @return {?}\n         */\n        dir => !!element.style[dir]));\n        if (!hasDirection) {\n            element.style.position = '';\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     * @param {?} element\n     * @param {?} dir\n     * @param {?} dirValue\n     * @return {?}\n     */\n    _addStickyStyle(element, dir, dirValue) {\n        element.classList.add(this._stickCellCss);\n        element.style[dir] = `${dirValue}px`;\n        element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        element.style.zIndex = this._getCalculatedZIndex(element);\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     * @param {?} element\n     * @return {?}\n     */\n    _getCalculatedZIndex(element) {\n        /** @type {?} */\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        /** @type {?} */\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of (/** @type {?} */ (STICKY_DIRECTIONS))) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /**\n     * Gets the widths for each cell in the provided row.\n     * @param {?} row\n     * @return {?}\n     */\n    _getCellWidths(row) {\n        /** @type {?} */\n        const cellWidths = [];\n        /** @type {?} */\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            /** @type {?} */\n            let cell = (/** @type {?} */ (firstRowCells[i]));\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._isNativeHtmlTable;\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._stickCellCss;\n    /** @type {?} */\n    StickyStyler.prototype.direction;\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._isBrowser;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * \\@docs-private\n * @param {?} id Id whose lookup failed.\n * @return {?}\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * \\@docs-private\n * @param {?} name\n * @return {?}\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * \\@docs-private\n * @param {?} data\n * @return {?}\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface used to provide an outlet for rows to be inserted into.\n * @record\n */\nfunction RowOutlet() { }\nif (false) {\n    /** @type {?} */\n    RowOutlet.prototype.viewContainer;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * \\@docs-private\n */\nclass DataRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) { return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDataRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DataRowOutlet, selectors: [[\"\", \"rowOutlet\", \"\"]] });\n/** @nocollapse */\nDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[rowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    DataRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    DataRowOutlet.prototype.elementRef;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * \\@docs-private\n */\nclass HeaderRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) { return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nHeaderRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: HeaderRowOutlet, selectors: [[\"\", \"headerRowOutlet\", \"\"]] });\n/** @nocollapse */\nHeaderRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[headerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    HeaderRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    HeaderRowOutlet.prototype.elementRef;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * \\@docs-private\n */\nclass FooterRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) { return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFooterRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FooterRowOutlet, selectors: [[\"\", \"footerRowOutlet\", \"\"]] });\n/** @nocollapse */\nFooterRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[footerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    FooterRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    FooterRowOutlet.prototype.elementRef;\n}\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Interface used to conveniently type the possible context interfaces for the render row.\n * \\@docs-private\n * @record\n * @template T\n */\nfunction RowContext() { }\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * \\@docs-private\n * @abstract\n * @template T\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * Set of properties that represents the identity of a single rendered row.\n *\n * When the table needs to determine the list of rows to render, it will do so by iterating through\n * each data object and evaluating its list of row templates to display (when multiTemplateDataRows\n * is false, there is only one template per data object). For each pair of data object and row\n * template, a `RenderRow` is added to the list of rows to render. If the data object and row\n * template pair has already been rendered, the previously used `RenderRow` is added; else a new\n * `RenderRow` is * created. Once the list is complete and all data objects have been itereated\n * through, a diff is performed to determine the changes that need to be made to the rendered rows.\n *\n * \\@docs-private\n * @record\n * @template T\n */\nfunction RenderRow() { }\nif (false) {\n    /** @type {?} */\n    RenderRow.prototype.data;\n    /** @type {?} */\n    RenderRow.prototype.dataIndex;\n    /** @type {?} */\n    RenderRow.prototype.rowDef;\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n * @template T\n */\nclass CdkTable {\n    /**\n     * @param {?} _differs\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} role\n     * @param {?} _dir\n     * @param {?} _document\n     * @param {?} _platform\n     */\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        this._multiTemplateDataRows = false;\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * \\@docs-private\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'grid');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     * @return {?}\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set trackBy(fn) {\n        if (isDevMode() && fn != null && typeof fn !== 'function' && (/** @type {?} */ (console)) &&\n            (/** @type {?} */ (console.warn))) {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     * @return {?}\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    /**\n     * @param {?} dataSource\n     * @return {?}\n     */\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     * @return {?}\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((/**\n         * @param {?} _i\n         * @param {?} dataRow\n         * @return {?}\n         */\n        (_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        this._renderUpdatedColumns();\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        this._checkStickyStates();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rowOutlet.viewContainer.clear();\n        this._headerRowOutlet.viewContainer.clear();\n        this._footerRowOutlet.viewContainer.clear();\n        this._cachedRenderRowsMap.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     * @return {?}\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        /** @type {?} */\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            return;\n        }\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} prevIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (record, prevIndex, currentIndex) => {\n            if (record.previousIndex == null) {\n                this._insertRow(record.item, (/** @type {?} */ (currentIndex)));\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove((/** @type {?} */ (prevIndex)));\n            }\n            else {\n                /** @type {?} */\n                const view = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (prevIndex)))));\n                viewContainer.move((/** @type {?} */ (view)), currentIndex);\n            }\n        }));\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            /** @type {?} */\n            const rowView = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (record.currentIndex)))));\n            rowView.context.$implicit = record.item.data;\n        }));\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Sets the header row definition to be used. Overrides the header row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the header row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addHeaderRowDef` and `removeHeaderRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    setHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs = new Set([headerRowDef]);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Sets the footer row definition to be used. Overrides the footer row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the footer row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addFooterRowDef` and `removeFooterRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    setFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs = new Set([footerRowDef]);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Adds a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /**\n     * Removes a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /**\n     * Adds a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /**\n     * Removes a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /**\n     * Adds a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Removes a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Adds a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Removes a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyHeaderRowStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._headerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyFooterRowStyles() {\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._footerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     * @return {?}\n     */\n    updateStickyColumnStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // Clear the left and right positioning from all columns in the table across all rows since\n        // sticky columns span across all table sections (header, data, footer)\n        this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((/**\n         * @param {?} headerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        }));\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            // Collect all the rows rendered with this row definition.\n            /** @type {?} */\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        }));\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((/**\n         * @param {?} footerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        }));\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     * @private\n     * @return {?}\n     */\n    _getAllRenderRows() {\n        /** @type {?} */\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        /** @type {?} */\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            /** @type {?} */\n            let data = this._data[i];\n            /** @type {?} */\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                /** @type {?} */\n                let renderRow = renderRowsForData[j];\n                /** @type {?} */\n                const cache = (/** @type {?} */ (this._cachedRenderRowsMap.get(renderRow.data)));\n                if (cache.has(renderRow.rowDef)) {\n                    (/** @type {?} */ (cache.get(renderRow.rowDef))).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     * @private\n     * @param {?} data\n     * @param {?} dataIndex\n     * @param {?=} cache\n     * @return {?}\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        /** @type {?} */\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            /** @type {?} */\n            const cachedRenderRows = (cache && cache.has(rowDef)) ? (/** @type {?} */ (cache.get(rowDef))) : [];\n            if (cachedRenderRows.length) {\n                /** @type {?} */\n                const dataRow = (/** @type {?} */ (cachedRenderRows.shift()));\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        }));\n    }\n    /**\n     * Update the map containing the content's column definitions.\n     * @private\n     * @return {?}\n     */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        /** @type {?} */\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => {\n            if (this._columnDefsByName.has(columnDef.name)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        }));\n    }\n    /**\n     * Update the list of all available row definitions that can be used.\n     * @private\n     * @return {?}\n     */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        /** @type {?} */\n        const defaultRowDefs = this._rowDefs.filter((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => !def.when));\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     * @private\n     * @return {?}\n     */\n    _renderUpdatedColumns() {\n        /** @type {?} */\n        const columnsDiffReducer = (/**\n         * @param {?} acc\n         * @param {?} def\n         * @return {?}\n         */\n        (acc, def) => acc || !!def.getColumnsDiff());\n        // Force re-render data rows if the list of column definitions have changed.\n        if (this._rowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed..\n        if (this._headerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderHeaderRows();\n        }\n        if (this._footerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderFooterRows();\n        }\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     * @private\n     * @param {?} dataSource\n     * @return {?}\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /**\n     * Set up a subscription for the data provided by the data source.\n     * @private\n     * @return {?}\n     */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        /** @type {?} */\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy)).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this._data = data || [];\n            this.renderRows();\n        }));\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._headerRowOutlet, def, i)));\n        this.updateStickyHeaderRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._footerRowOutlet, def, i)));\n        this.updateStickyFooterRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Adds the sticky column styles for the rows according to the columns' stick states.\n     * @private\n     * @param {?} rows\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _addStickyColumnStyles(rows, rowDef) {\n        /** @type {?} */\n        const columnDefs = Array.from(rowDef.columns || []).map((/**\n         * @param {?} columnName\n         * @return {?}\n         */\n        columnName => {\n            /** @type {?} */\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return (/** @type {?} */ (columnDef));\n        }));\n        /** @type {?} */\n        const stickyStartStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.sticky));\n        /** @type {?} */\n        const stickyEndStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.stickyEnd));\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates);\n    }\n    /**\n     * Gets the list of rows that have been rendered in the row outlet.\n     * @param {?} rowOutlet\n     * @return {?}\n     */\n    _getRenderedRows(rowOutlet) {\n        /** @type {?} */\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            /** @type {?} */\n            const viewRef = ((/** @type {?} */ ((/** @type {?} */ (rowOutlet.viewContainer.get(i))))));\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     * @param {?} data\n     * @param {?} dataIndex\n     * @return {?}\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        /** @type {?} */\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => !def.when || def.when(dataIndex, data)));\n        }\n        else {\n            /** @type {?} */\n            let rowDef = this._rowDefs.find((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => def.when && def.when(dataIndex, data))) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    /**\n     * Create the embedded view for the data row template and place it in the correct index location\n     * within the data row view container.\n     * @private\n     * @param {?} renderRow\n     * @param {?} renderIndex\n     * @return {?}\n     */\n    _insertRow(renderRow, renderIndex) {\n        /** @type {?} */\n        const rowDef = renderRow.rowDef;\n        /** @type {?} */\n        const context = { $implicit: renderRow.data };\n        this._renderRow(this._rowOutlet, rowDef, renderIndex, context);\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     * @private\n     * @param {?} outlet\n     * @param {?} rowDef\n     * @param {?} index\n     * @param {?=} context\n     * @return {?}\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     * @private\n     * @return {?}\n     */\n    _updateRowIndexContext() {\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            /** @type {?} */\n            const viewRef = (/** @type {?} */ (viewContainer.get(renderIndex)));\n            /** @type {?} */\n            const context = (/** @type {?} */ (viewRef.context));\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /**\n     * Gets the column definitions for the provided row def.\n     * @private\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, (/**\n         * @param {?} columnId\n         * @return {?}\n         */\n        columnId => {\n            /** @type {?} */\n            const column = this._columnDefsByName.get(columnId);\n            if (!column) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        }));\n    }\n    /**\n     * Adds native table sections (e.g. tbody) and moves the row outlets into them.\n     * @private\n     * @return {?}\n     */\n    _applyNativeTableSections() {\n        /** @type {?} */\n        const documentFragment = this._document.createDocumentFragment();\n        /** @type {?} */\n        const sections = [\n            { tag: 'thead', outlet: this._headerRowOutlet },\n            { tag: 'tbody', outlet: this._rowOutlet },\n            { tag: 'tfoot', outlet: this._footerRowOutlet },\n        ];\n        for (const section of sections) {\n            /** @type {?} */\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            element.appendChild(section.outlet.elementRef.nativeElement);\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     * @private\n     * @return {?}\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     * @private\n     * @return {?}\n     */\n    _checkStickyStates() {\n        /** @type {?} */\n        const stickyCheckReducer = (/**\n         * @param {?} acc\n         * @param {?} d\n         * @return {?}\n         */\n        (acc, d) => {\n            return acc || d.hasStickyChanged();\n        });\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     * @private\n     * @return {?}\n     */\n    _setupStickyStyler() {\n        /** @type {?} */\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._platform.isBrowser);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        }));\n    }\n    /**\n     * Filters definitions that belong to this table from a QueryList.\n     * @private\n     * @template I\n     * @param {?} items\n     * @return {?}\n     */\n    _getOwnDefs(items) {\n        return items.filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => !item._table || item._table === this));\n    }\n}\nCdkTable.ɵfac = function CdkTable_Factory(t) { return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform)); };\nCdkTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTable, selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]], contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n    } }, viewQuery: function CdkTable_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(DataRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(HeaderRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(FooterRowOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\n    } }, hostAttrs: [1, \"cdk-table\"], inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\" }, exportAs: [\"cdkTable\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_TABLE, useExisting: CdkTable }])], ngContentSelectors: _c1, decls: 4, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function CdkTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementContainer(1, 0);\n        ɵngcc0.ɵɵelementContainer(2, 1);\n        ɵngcc0.ɵɵelementContainer(3, 2);\n    } }, directives: [HeaderRowOutlet,\n        DataRowOutlet,\n        FooterRowOutlet], encapsulation: 2 });\n/** @nocollapse */\nCdkTable.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\nCdkTable.propDecorators = {\n    trackBy: [{ type: Input }],\n    dataSource: [{ type: Input }],\n    multiTemplateDataRows: [{ type: Input }],\n    _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\n    _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\n    _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\n    _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef, { descendants: true },] }],\n    _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef, { descendants: true },] }],\n    _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef, {\n                    descendants: true\n                },] }],\n    _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef, {\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTable, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-table, table[cdk-table]',\n                exportAs: 'cdkTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'cdk-table'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `MatTable` component is effectively a noop, so we are removing it.\n                // The view for `MatTable` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                providers: [{ provide: CDK_TABLE, useExisting: CdkTable }]\n            }]\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['role']\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, { trackBy: [{\n            type: Input\n        }], dataSource: [{\n            type: Input\n        }], multiTemplateDataRows: [{\n            type: Input\n        }], _rowOutlet: [{\n            type: ViewChild,\n            args: [DataRowOutlet, { static: true }]\n        }], _headerRowOutlet: [{\n            type: ViewChild,\n            args: [HeaderRowOutlet, { static: true }]\n        }], _footerRowOutlet: [{\n            type: ViewChild,\n            args: [FooterRowOutlet, { static: true }]\n        }], _contentColumnDefs: [{\n            type: ContentChildren,\n            args: [CdkColumnDef, { descendants: true }]\n        }], _contentRowDefs: [{\n            type: ContentChildren,\n            args: [CdkRowDef, { descendants: true }]\n        }], _contentHeaderRowDefs: [{\n            type: ContentChildren,\n            args: [CdkHeaderRowDef, {\n                    descendants: true\n                }]\n        }], _contentFooterRowDefs: [{\n            type: ContentChildren,\n            args: [CdkFooterRowDef, {\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTable.ngAcceptInputType_multiTemplateDataRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._document;\n    /**\n     * Latest data provided by the data source.\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._data;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._onDestroy;\n    /**\n     * List of the rendered rows as identified by their `RenderRow` object.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._renderRows;\n    /**\n     * Subscription that listens for the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._renderChangeSubscription;\n    /**\n     * Map of all the user's defined columns (header, data, and footer cell template) identified by\n     * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n     * any custom column definitions added to `_customColumnDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._columnDefsByName;\n    /**\n     * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n     * using `ContentChildren` as well as any custom row definitions added to `_customRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._rowDefs;\n    /**\n     * Set of all header row definitions that can be used by this table. Populated by the rows\n     * gathered by using `ContentChildren` as well as any custom row definitions added to\n     * `_customHeaderRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._headerRowDefs;\n    /**\n     * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n     * using `ContentChildren` as well as any custom row definitions added to\n     * `_customFooterRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._footerRowDefs;\n    /**\n     * Differ used to find the changes in the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._dataDiffer;\n    /**\n     * Stores the row definition that does not have a when predicate.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._defaultRowDef;\n    /**\n     * Column definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * column definitions as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customColumnDefs;\n    /**\n     * Data row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in data rows as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customRowDefs;\n    /**\n     * Header row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in header rows as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customHeaderRowDefs;\n    /**\n     * Footer row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n     * built-in footer row as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customFooterRowDefs;\n    /**\n     * Whether the header row definition has been changed. Triggers an update to the header row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._headerRowDefChanged;\n    /**\n     * Whether the footer row definition has been changed. Triggers an update to the footer row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._footerRowDefChanged;\n    /**\n     * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n     * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n     * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n     * and row template matches, which allows the `IterableDiffer` to check rows by reference\n     * and understand which rows are added/moved/removed.\n     *\n     * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n     * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n     * contains an array of created pairs. The array is necessary to handle cases where the data\n     * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n     * stored.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._cachedRenderRowsMap;\n    /**\n     * Whether the table is applied to a native `<table>`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._isNativeHtmlTable;\n    /**\n     * Utility class that is responsible for applying the appropriate sticky positioning styles to\n     * the table's rows and cells.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._stickyStyler;\n    /**\n     * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n     * table subclasses.\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype.stickyCssClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._trackByFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._dataSource;\n    /** @type {?} */\n    CdkTable.prototype._multiTemplateDataRows;\n    /**\n     * Stream containing the latest information on what rows are being displayed on screen.\n     * Can be used by the data source to as a heuristic of what data should be provided.\n     *\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTable.prototype.viewChange;\n    /** @type {?} */\n    CdkTable.prototype._rowOutlet;\n    /** @type {?} */\n    CdkTable.prototype._headerRowOutlet;\n    /** @type {?} */\n    CdkTable.prototype._footerRowOutlet;\n    /**\n     * The column definitions provided by the user that contain what the header, data, and footer\n     * cells should render for each column.\n     * @type {?}\n     */\n    CdkTable.prototype._contentColumnDefs;\n    /**\n     * Set of data row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentRowDefs;\n    /**\n     * Set of header row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentHeaderRowDefs;\n    /**\n     * Set of footer row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentFooterRowDefs;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._differs;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._platform;\n}\n/**\n * Utility function that gets a merged list of the entries in an array and values of a Set.\n * @template T\n * @param {?} array\n * @param {?} set\n * @return {?}\n */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/text-column.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass CdkTextColumn {\n    /**\n     * @param {?} _table\n     * @param {?} _options\n     */\n    constructor(_table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /**\n         * Alignment of the cell values.\n         */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /**\n     * Column name that should be used to reference this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((/**\n                 * @param {?} data\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (data, name) => ((/** @type {?} */ (data)))[name]));\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     * @return {?}\n     */\n    _createDefaultHeaderText() {\n        /** @type {?} */\n        const name = this.name;\n        if (isDevMode() && !name) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /**\n     * Synchronizes the column definition name with the text column name.\n     * @private\n     * @return {?}\n     */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) { return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8)); };\nCdkTextColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTextColumn, selectors: [[\"cdk-text-column\"]], viewQuery: function CdkTextColumn_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkColumnDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkCellDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkHeaderCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n    } }, inputs: { justify: \"justify\", name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\" }, decls: 3, vars: 0, consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]], template: function CdkTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [CdkColumnDef,\n        CdkHeaderCellDef,\n        CdkCellDef,\n        CdkHeaderCell,\n        CdkCell], encapsulation: 2 });\n/** @nocollapse */\nCdkTextColumn.ctorParameters = () => [\n    { type: CdkTable, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\n];\nCdkTextColumn.propDecorators = {\n    name: [{ type: Input }],\n    headerText: [{ type: Input }],\n    dataAccessor: [{ type: Input }],\n    justify: [{ type: Input }],\n    columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\n    cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\n    headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-text-column',\n                template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: CdkTable, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [TEXT_COLUMN_OPTIONS]\n            }] }]; }, { justify: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], headerText: [{\n            type: Input\n        }], dataAccessor: [{\n            type: Input\n        }], columnDef: [{\n            type: ViewChild,\n            args: [CdkColumnDef, { static: true }]\n        }], cell: [{\n            type: ViewChild,\n            args: [CdkCellDef, { static: true }]\n        }], headerCell: [{\n            type: ViewChild,\n            args: [CdkHeaderCellDef, { static: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTextColumn.prototype._name;\n    /**\n     * Text label that should be used for the column header. If this property is not\n     * set, the header text will default to the column name with its first letter capitalized.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.headerText;\n    /**\n     * Accessor function to retrieve the data rendered for each cell. If this\n     * property is not set, the data cells will render the value found in the data's property matching\n     * the column's name. For example, if the column is named `id`, then the rendered value will be\n     * value defined by the data's `id` property.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.dataAccessor;\n    /**\n     * Alignment of the cell values.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.justify;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.columnDef;\n    /**\n     * The column cell is provided to the column during `ngOnInit` with a static query.\n     * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n     * column definition was provided in the same view as the table, which is not the case with this\n     * component.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.cell;\n    /**\n     * The column headerCell is provided to the column during `ngOnInit` with a static query.\n     * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n     * column definition was provided in the same view as the table, which is not the case with this\n     * component.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.headerCell;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextColumn.prototype._table;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextColumn.prototype._options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkTableModule });\nCdkTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkTableModule_Factory(t) { return new (t || CdkTableModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, { declarations: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn], exports: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\n        type: NgModule,\n        args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, STICKY_DIRECTIONS, StickyStyler, TEXT_COLUMN_OPTIONS, mixinHasStickyInput };\n\n//# sourceMappingURL=table.js.map","import { CommonModule } from '@angular/common';\nimport { Injectable, ɵɵdefineInjectable, Optional, SkipSelf, InjectionToken, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, Input, Output, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { mixinDisabled, mixinInitialized } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/paginator-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/material/tooltip';\nimport * as ɵngcc4 from '@angular/material/form-field';\nimport * as ɵngcc5 from '@angular/material/select';\nimport * as ɵngcc6 from '@angular/material/core';\n\nfunction MatPaginator_div_2_mat_form_field_3_mat_option_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-option\", 19);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const pageSizeOption_r6 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", pageSizeOption_r6);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", pageSizeOption_r6, \" \");\n} }\nfunction MatPaginator_div_2_mat_form_field_3_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-form-field\", 16);\n    ɵngcc0.ɵɵelementStart(1, \"mat-select\", 17);\n    ɵngcc0.ɵɵlistener(\"selectionChange\", function MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7._changePageSize($event.value); });\n    ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_mat_form_field_3_mat_option_2_Template, 2, 2, \"mat-option\", 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"color\", ctx_r3.color);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r3.pageSize)(\"disabled\", ctx_r3.disabled)(\"aria-label\", ctx_r3._intl.itemsPerPageLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3._displayedPageSizeOptions);\n} }\nfunction MatPaginator_div_2_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 20);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4.pageSize);\n} }\nfunction MatPaginator_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, MatPaginator_div_2_mat_form_field_3_Template, 3, 5, \"mat-form-field\", 14);\n    ɵngcc0.ɵɵtemplate(4, MatPaginator_div_2_div_4_Template, 2, 1, \"div\", 15);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0._intl.itemsPerPageLabel, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0._displayedPageSizeOptions.length > 1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0._displayedPageSizeOptions.length <= 1);\n} }\nfunction MatPaginator_button_6_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 21);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_6_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.firstPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r1._intl.firstPageLabel)(\"matTooltipDisabled\", ctx_r1._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r1._previousButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r1._intl.firstPageLabel);\n} }\nfunction MatPaginator_button_13_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵnamespaceHTML();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_13_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.lastPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 24);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r2._intl.lastPageLabel)(\"matTooltipDisabled\", ctx_r2._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r2._nextButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r2._intl.lastPageLabel);\n} }\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * A label for the page size selector.\n         */\n        this.itemsPerPageLabel = 'Items per page:';\n        /**\n         * A label for the button that increments the current page.\n         */\n        this.nextPageLabel = 'Next page';\n        /**\n         * A label for the button that decrements the current page.\n         */\n        this.previousPageLabel = 'Previous page';\n        /**\n         * A label for the button that moves to the first page.\n         */\n        this.firstPageLabel = 'First page';\n        /**\n         * A label for the button that moves to the last page.\n         */\n        this.lastPageLabel = 'Last page';\n        /**\n         * A label for the range of items within the current page and the length of the whole list.\n         */\n        this.getRangeLabel = (/**\n         * @param {?} page\n         * @param {?} pageSize\n         * @param {?} length\n         * @return {?}\n         */\n        (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            /** @type {?} */\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            /** @type {?} */\n            const endIndex = startIndex < length ?\n                Math.min(startIndex + pageSize, length) :\n                startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        });\n    }\n}\nMatPaginatorIntl.ɵfac = function MatPaginatorIntl_Factory(t) { return new (t || MatPaginatorIntl)(); };\n/** @nocollapse */ MatPaginatorIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatPaginatorIntl_Factory() { return new MatPaginatorIntl(); }, token: MatPaginatorIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatorIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream to emit from when labels are changed. Use this to notify components when the labels have\n     * changed after initialization.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.changes;\n    /**\n     * A label for the page size selector.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.itemsPerPageLabel;\n    /**\n     * A label for the button that increments the current page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.nextPageLabel;\n    /**\n     * A label for the button that decrements the current page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.previousPageLabel;\n    /**\n     * A label for the button that moves to the first page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.firstPageLabel;\n    /**\n     * A label for the button that moves to the last page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.lastPageLabel;\n    /**\n     * A label for the range of items within the current page and the length of the whole list.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.getRangeLabel;\n}\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/paginator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The default page size if there is no page size and there are no provided page size options.\n * @type {?}\n */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\nif (false) {\n    /**\n     * The current page index.\n     * @type {?}\n     */\n    PageEvent.prototype.pageIndex;\n    /**\n     * Index of the page that was selected previously.\n     * \\@breaking-change 8.0.0 To be made into a required property.\n     * @type {?}\n     */\n    PageEvent.prototype.previousPageIndex;\n    /**\n     * The current page size\n     * @type {?}\n     */\n    PageEvent.prototype.pageSize;\n    /**\n     * The current total number of items being paged\n     * @type {?}\n     */\n    PageEvent.prototype.length;\n}\n/**\n * Object that can be used to configure the default options for the paginator module.\n * @record\n */\nfunction MatPaginatorDefaultOptions() { }\nif (false) {\n    /**\n     * Number of items to display on a page. By default set to 50.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.pageSize;\n    /**\n     * The set of provided page size options to display to the user.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.pageSizeOptions;\n    /**\n     * Whether to hide the page size selection UI from the user.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.hidePageSize;\n    /**\n     * Whether to show the first/last buttons UI to the user.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.showFirstLastButtons;\n}\n/**\n * Injection token that can be used to provide the default options for the paginator module.\n * @type {?}\n */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to MatPaginator.\n/**\n * \\@docs-private\n */\nclass MatPaginatorBase {\n}\n/** @type {?} */\nconst _MatPaginatorBase = mixinDisabled(mixinInitialized(MatPaginatorBase));\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorBase {\n    /**\n     * @param {?} _intl\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaults\n     */\n    constructor(_intl, _changeDetectorRef, defaults) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /**\n         * Event emitted when the paginator changes the page size or page index.\n         */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this._hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this._showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n    }\n    /**\n     * The zero-based page index of the displayed list of items. Defaulted to 0.\n     * @return {?}\n     */\n    get pageIndex() { return this._pageIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * The length of the total number of items that are being paginated. Defaulted to 0.\n     * @return {?}\n     */\n    get length() { return this._length; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Number of items to display on a page. By default set to 50.\n     * @return {?}\n     */\n    get pageSize() { return this._pageSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /**\n     * The set of provided page size options to display to the user.\n     * @return {?}\n     */\n    get pageSizeOptions() { return this._pageSizeOptions; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map((/**\n         * @param {?} p\n         * @return {?}\n         */\n        p => coerceNumberProperty(p)));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /**\n     * Whether to hide the page size selection UI from the user.\n     * @return {?}\n     */\n    get hidePageSize() { return this._hidePageSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to show the first/last buttons UI to the user.\n     * @return {?}\n     */\n    get showFirstLastButtons() { return this._showFirstLastButtons; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /**\n     * Advances to the next page if it exists.\n     * @return {?}\n     */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex++;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move back to the previous page if it exists.\n     * @return {?}\n     */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex--;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move to the first page if not already there.\n     * @return {?}\n     */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move to the last page if not already there.\n     * @return {?}\n     */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Whether there is a previous page.\n     * @return {?}\n     */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /**\n     * Whether there is a next page.\n     * @return {?}\n     */\n    hasNextPage() {\n        /** @type {?} */\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /**\n     * Calculate the number of pages\n     * @return {?}\n     */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     * @param {?} pageSize\n     * @return {?}\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        /** @type {?} */\n        const startIndex = this.pageIndex * this.pageSize;\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Checks whether the buttons for going forwards should be disabled.\n     * @return {?}\n     */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /**\n     * Checks whether the buttons for going backwards should be disabled.\n     * @return {?}\n     */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     * @private\n     * @return {?}\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize = this.pageSizeOptions.length != 0 ?\n                this.pageSizeOptions[0] :\n                DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => a - b));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Emits an event notifying that a change of the paginator's properties has been triggered.\n     * @private\n     * @param {?} previousPageIndex\n     * @return {?}\n     */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length\n        });\n    }\n}\nMatPaginator.ɵfac = function MatPaginator_Factory(t) { return new (t || MatPaginator)(ɵngcc0.ɵɵdirectiveInject(MatPaginatorIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_PAGINATOR_DEFAULT_OPTIONS, 8)); };\nMatPaginator.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatPaginator, selectors: [[\"mat-paginator\"]], hostAttrs: [1, \"mat-paginator\"], inputs: { disabled: \"disabled\", pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\", color: \"color\" }, outputs: { page: \"page\" }, exportAs: [\"matPaginator\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 14, vars: 14, consts: [[1, \"mat-paginator-outer-container\"], [1, \"mat-paginator-container\"], [\"class\", \"mat-paginator-page-size\", 4, \"ngIf\"], [1, \"mat-paginator-range-actions\"], [1, \"mat-paginator-range-label\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-previous\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"viewBox\", \"0 0 24 24\", \"focusable\", \"false\", 1, \"mat-paginator-icon\"], [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-next\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [1, \"mat-paginator-page-size\"], [1, \"mat-paginator-page-size-label\"], [\"class\", \"mat-paginator-page-size-select\", 3, \"color\", 4, \"ngIf\"], [\"class\", \"mat-paginator-page-size-value\", 4, \"ngIf\"], [1, \"mat-paginator-page-size-select\", 3, \"color\"], [3, \"value\", \"disabled\", \"aria-label\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"mat-paginator-page-size-value\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"]], template: function MatPaginator_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_Template, 5, 3, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n        ɵngcc0.ɵɵtext(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, MatPaginator_button_6_Template, 3, 5, \"button\", 5);\n        ɵngcc0.ɵɵelementStart(7, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_7_listener() { return ctx.previousPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(8, \"svg\", 7);\n        ɵngcc0.ɵɵelement(9, \"path\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelementStart(10, \"button\", 9);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_10_listener() { return ctx.nextPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(11, \"svg\", 7);\n        ɵngcc0.ɵɵelement(12, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(13, MatPaginator_button_13_Template, 3, 5, \"button\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.hidePageSize);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx._intl.getRangeLabel(ctx.pageIndex, ctx.pageSize, ctx.length), \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.previousPageLabel)(\"matTooltipDisabled\", ctx._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._previousButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.previousPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.nextPageLabel)(\"matTooltipDisabled\", ctx._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._nextButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.nextPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.MatButton, ɵngcc3.MatTooltip, ɵngcc4.MatFormField, ɵngcc5.MatSelect, ɵngcc1.NgForOf, ɵngcc6.MatOption], styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;min-height:56px;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatPaginator.ctorParameters = () => [\n    { type: MatPaginatorIntl },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PAGINATOR_DEFAULT_OPTIONS,] }] }\n];\nMatPaginator.propDecorators = {\n    color: [{ type: Input }],\n    pageIndex: [{ type: Input }],\n    length: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    pageSizeOptions: [{ type: Input }],\n    hidePageSize: [{ type: Input }],\n    showFirstLastButtons: [{ type: Input }],\n    page: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginator, [{\n        type: Component,\n        args: [{\n                selector: 'mat-paginator',\n                exportAs: 'matPaginator',\n                template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-paginator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;min-height:56px;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"]\n            }]\n    }], function () { return [{ type: MatPaginatorIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n            }] }]; }, { page: [{\n            type: Output\n        }], pageIndex: [{\n            type: Input\n        }], length: [{\n            type: Input\n        }], pageSize: [{\n            type: Input\n        }], pageSizeOptions: [{\n            type: Input\n        }], hidePageSize: [{\n            type: Input\n        }], showFirstLastButtons: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_pageIndex;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_length;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_pageSize;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_hidePageSize;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_showFirstLastButtons;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._initialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._intlChanges;\n    /**\n     * Theme color to be used for the underlying form controls.\n     * @type {?}\n     */\n    MatPaginator.prototype.color;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._pageIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._length;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._pageSize;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._pageSizeOptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._hidePageSize;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._showFirstLastButtons;\n    /**\n     * Event emitted when the paginator changes the page size or page index.\n     * @type {?}\n     */\n    MatPaginator.prototype.page;\n    /**\n     * Displayed set of page size options. Will be sorted and include current page size.\n     * @type {?}\n     */\n    MatPaginator.prototype._displayedPageSizeOptions;\n    /** @type {?} */\n    MatPaginator.prototype._intl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._changeDetectorRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/paginator-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatPaginatorModule {\n}\nMatPaginatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatPaginatorModule });\nMatPaginatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatPaginatorModule_Factory(t) { return new (t || MatPaginatorModule)(); }, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatSelectModule,\n            MatTooltipModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPaginatorModule, { declarations: function () { return [MatPaginator]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatTooltipModule]; }, exports: function () { return [MatPaginator]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatorModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatSelectModule,\n                    MatTooltipModule,\n                ],\n                exports: [MatPaginator],\n                declarations: [MatPaginator],\n                providers: [MAT_PAGINATOR_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent };\n\n//# sourceMappingURL=paginator.js.map","import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, isDevMode, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, ElementRef, Optional, Inject, Self, Attribute, ViewChild, ContentChildren, Input, ContentChild, Output, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, ErrorStateMatcher, MatOption, MatOptgroup, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MAT_FORM_FIELD, MatFormFieldModule } from '@angular/material/form-field';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, HOME, END, A } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/overlay';\nimport * as ɵngcc7 from '@angular/common';\nimport * as ɵngcc8 from '@angular/material/form-field';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.placeholder || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.triggerValue || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_2_Template, 1, 0, undefined, 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r3.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13, 14);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r4._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r4._transformOrigin)(\"font-size\", ctx_r4._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r4.panelClass)(\"@transformPanel\", ctx_r4.multiple ? \"showing-multiple\" : \"showing\");\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            // 32px = 2 * 16px padding\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            // 64px = 48px padding on the left + 16px padding on the right\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n * @return {?}\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * The max height of the select's overlay panel\n * @type {?}\n */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis\n * @type {?}\n */\nconst SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @type {?}\n */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n * @type {?}\n */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n * @type {?}\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n * @type {?}\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Injection token that determines the scroll handling while a select is open.\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * Object that can be used to configure the default options for the select module.\n * @record\n */\nfunction MatSelectConfig() { }\nif (false) {\n    /**\n     * Whether option centering should be disabled.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.disableOptionCentering;\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.typeaheadDebounceInterval;\n}\n/**\n * Injection token that can be used to provide the default options the select module.\n * @type {?}\n */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Change event object that is emitted when the select value has changed.\n */\nclass MatSelectChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * Reference to the select that emitted the change event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.source;\n    /**\n     * Current value of the select that emitted the event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.value;\n}\n// Boilerplate for applying mixins to MatSelect.\n/**\n * \\@docs-private\n */\nclass MatSelectBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSelectBase.prototype._elementRef;\n    /** @type {?} */\n    MatSelectBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatSelectBase.prototype._parentForm;\n    /** @type {?} */\n    MatSelectBase.prototype._parentFormGroup;\n    /** @type {?} */\n    MatSelectBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger'\n            }]\n    }], null, null); })();\nclass MatSelect extends _MatSelectMixinBase {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _changeDetectorRef\n     * @param {?} _ngZone\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} elementRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _parentFormField\n     * @param {?} ngControl\n     * @param {?} tabIndex\n     * @param {?} scrollStrategyFactory\n     * @param {?} _liveAnnouncer\n     * @param {?=} defaults\n     */\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, defaults) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        /**\n         * Whether or not the overlay panel is open.\n         */\n        this._panelOpen = false;\n        /**\n         * Whether filling out the select is required in the form.\n         */\n        this._required = false;\n        /**\n         * The scroll position of the overlay panel, calculated to center the selected option.\n         */\n        this._scrollTop = 0;\n        /**\n         * Whether the component is in multiple selection mode.\n         */\n        this._multiple = false;\n        /**\n         * Comparison function to specify which option is displayed. Defaults to object equality.\n         */\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        /**\n         * Unique id for this input.\n         */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        this._destroy = new Subject();\n        /**\n         * The cached font-size of the trigger element.\n         */\n        this._triggerFontSize = 0;\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when select has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * The IDs of child options to be passed to the aria-owns attribute.\n         */\n        this._optionIds = '';\n        /**\n         * The value of the select panel's transform-origin property.\n         */\n        this._transformOrigin = 'top';\n        /**\n         * Emits when the panel element is finished transforming in.\n         */\n        this._panelDoneAnimatingStream = new Subject();\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        /**\n         * Whether the component is disabling centering of the active option over the trigger.\n         */\n        this._disableOptionCentering = false;\n        this._focused = false;\n        /**\n         * A name for this control that can be used by `mat-form-field`.\n         */\n        this.controlType = 'mat-select';\n        /**\n         * Aria label of the select. If not specified, the placeholder will be used as label.\n         */\n        this.ariaLabel = '';\n        /**\n         * Combined stream of all of the child options' change events.\n         */\n        this.optionSelectionChanges = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap((/**\n                 * @return {?}\n                 */\n                () => merge(...options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange))))));\n            }\n            return this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelectionChanges)));\n        }))));\n        /**\n         * Event emitted when the select panel has been toggled.\n         */\n        this.openedChange = new EventEmitter();\n        /**\n         * Event emitted when the select has been opened.\n         */\n        this._openedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the select has been closed.\n         */\n        this._closedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the selected value has been changed by the user.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        if (defaults) {\n            if (defaults.disableOptionCentering != null) {\n                this.disableOptionCentering = defaults.disableOptionCentering;\n            }\n            if (defaults.typeaheadDebounceInterval != null) {\n                this.typeaheadDebounceInterval = defaults.typeaheadDebounceInterval;\n            }\n        }\n    }\n    /**\n     * Whether the select is focused.\n     * @return {?}\n     */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /**\n     * Placeholder to be shown if no value has been selected.\n     * @return {?}\n     */\n    get placeholder() { return this._placeholder; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the component is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the user should be allowed to select multiple options.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        if (this._selectionModel) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to center the active option over the trigger.\n     * @return {?}\n     */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Value of the select control.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @return {?}\n     */\n    get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /**\n     * Unique id of the element.\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.panelOpen) {\n                this._scrollTop = 0;\n                this.openedChange.emit(true);\n            }\n            else {\n                this.openedChange.emit(false);\n                this.overlayDir.offsetX = 0;\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n        this._viewportRuler.change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.added.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.select()));\n            event.removed.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.deselect()));\n        }));\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._resetOptions();\n            this._initializeSelection();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                this.overlayDir.overlayRef.overlayElement) {\n                this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n            }\n        }));\n    }\n    /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Whether or not the overlay panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /**\n     * The currently selected option.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The value displayed in the trigger.\n     * @return {?}\n     */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            /** @type {?} */\n            const selectedOptions = this._selectionModel.selected.map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.viewValue));\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /**\n     * Handles all keydown events on the select.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /**\n     * Handles keyboard events while the select is closed.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClosedKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        /** @type {?} */\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        /** @type {?} */\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            /** @type {?} */\n            const previouslySelectedOption = this.selected;\n            if (keyCode === HOME || keyCode === END) {\n                keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n            /** @type {?} */\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(((/** @type {?} */ (selectedOption))).viewValue, 10000);\n            }\n        }\n    }\n    /**\n     * Handles keyboard events when the selected is open.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleOpenKeydown(event) {\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        /** @type {?} */\n        const isTyping = manager.isTyping();\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        }\n        else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            /** @type {?} */\n            const hasDeselectedOptions = this.options.some((/**\n             * @param {?} opt\n             * @return {?}\n             */\n            opt => !opt.disabled && !opt.selected));\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            }));\n        }\n        else {\n            /** @type {?} */\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    _onAttached() {\n        this.overlayDir.positionChange.pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.detectChanges();\n            this._calculateOverlayOffsetX();\n            this.panel.nativeElement.scrollTop = this._scrollTop;\n        }));\n    }\n    /**\n     * Returns the theme to be used on the panel.\n     * @return {?}\n     */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /**\n     * Whether the select has a value.\n     * @return {?}\n     */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setSelectionByValue(value) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            this._selectionModel.clear();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            (currentValue) => this._selectValue(currentValue)));\n            this._sortValues();\n        }\n        else {\n            this._selectionModel.clear();\n            /** @type {?} */\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.setActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @private\n     * @param {?} value\n     * @return {?} Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        /** @type {?} */\n        const correspondingOption = this.options.find((/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        }));\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // Select the active item when tabbing away. This is consistent with how the native\n            // select behaves. Note that we only want to do this in single selection mode.\n            if (!this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n            // Restore focus to the trigger before closing. Ensures that the focus\n            // position won't be lost if the user got focus into the overlay.\n            this.focus();\n            this.close();\n        }));\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen && this.panel) {\n                this._scrollActiveOptionIntoView();\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        }));\n    }\n    /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @private\n     * @return {?}\n     */\n    _resetOptions() {\n        /** @type {?} */\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        }));\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._stateChanges)))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n        this._setOptionIds();\n    }\n    /**\n     * Invoked when an option is clicked.\n     * @private\n     * @param {?} option\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    _onSelect(option, isUserInput) {\n        /** @type {?} */\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the selected values in the selected based on their order in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this.multiple) {\n            /** @type {?} */\n            const options = this.options.toArray();\n            this._selectionModel.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = ((/** @type {?} */ (this.selected))).map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.value));\n        }\n        else {\n            valueToEmit = this.selected ? ((/** @type {?} */ (this.selected))).value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @private\n     * @return {?}\n     */\n    _setOptionIds() {\n        this._optionIds = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.id)).join(' ');\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @private\n     * @return {?}\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /**\n     * Scrolls the active option into view.\n     * @private\n     * @return {?}\n     */\n    _scrollActiveOptionIntoView() {\n        /** @type {?} */\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(activeOptionIndex + labelCount, this._getItemHeight(), this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    /**\n     * Focuses the select element.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Gets the index of the provided option in the option list.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.reduce((/**\n         * @param {?} result\n         * @param {?} current\n         * @param {?} index\n         * @return {?}\n         */\n        (result, current, index) => {\n            if (result !== undefined) {\n                return result;\n            }\n            return option === current ? index : undefined;\n        }), undefined);\n    }\n    /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayPosition() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const items = this._getItemCount();\n        /** @type {?} */\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        /** @type {?} */\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        /** @type {?} */\n        let selectedOptionOffset = this.empty ? 0 : (/** @type {?} */ (this._getOptionIndex(this._selectionModel.selected[0])));\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /** @type {?} */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        /** @type {?} */\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        /** @type {?} */\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    /**\n     * Returns the aria-label of the select component.\n     * @return {?}\n     */\n    _getAriaLabel() {\n        // If an ariaLabelledby value has been set by the consumer, the select should not overwrite the\n        // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n        return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n    }\n    /**\n     * Returns the aria-labelledby of the select component.\n     * @return {?}\n     */\n    _getAriaLabelledby() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Note: we use `_getAriaLabel` here, because we want to check whether there's a\n        // computed label. `this.ariaLabel` is only the user-specified label.\n        if (!this._parentFormField || !this._parentFormField._hasFloatingLabel() ||\n            this._getAriaLabel()) {\n            return null;\n        }\n        return this._parentFormField._labelId || null;\n    }\n    /**\n     * Determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayOffsetX() {\n        /** @type {?} */\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        /** @type {?} */\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else {\n            /** @type {?} */\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        /** @type {?} */\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        /** @type {?} */\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @private\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        /** @type {?} */\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this._disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            /** @type {?} */\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            /** @type {?} */\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            /** @type {?} */\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @private\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const panelHeightTop = Math.abs(this._offsetY);\n        /** @type {?} */\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @private\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @private\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /**\n     * Sets the transform origin point based on the selected option.\n     * @private\n     * @return {?}\n     */\n    _getOriginBasedOnOption() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /**\n     * Calculates the amount of items in the select. This includes options and group labels.\n     * @private\n     * @return {?}\n     */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n    /**\n     * Calculates the height of the select's options.\n     * @private\n     * @return {?}\n     */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty;\n    }\n}\nMatSelect.ɵfac = function MatSelect_Factory(t) { return new (t || MatSelect)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\nMatSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSelectTrigger, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatSelect_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayDir = _t.first);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-select\"], hostVars: 19, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-label\", ctx._getAriaLabel())(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-owns\", ctx.panelOpen ? ctx._optionIds : null)(\"aria-multiselectable\", ctx.multiple)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", disableOptionCentering: \"disableOptionCentering\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c3, decls: 9, vars: 9, consts: [[\"cdk-overlay-origin\", \"\", \"aria-hidden\", \"true\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-panel-wrap\"], [3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 10, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r0)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc6.CdkOverlayOrigin, ɵngcc7.NgSwitch, ɵngcc7.NgSwitchCase, ɵngcc6.CdkConnectedOverlay, ɵngcc7.NgSwitchDefault, ɵngcc7.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatSelect.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n];\nMatSelect.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup, { descendants: true },] }],\n    panelClass: [{ type: Input }],\n    customTrigger: [{ type: ContentChild, args: [MatSelectTrigger,] }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<div cdk-overlay-origin\\n     class=\\\"mat-select-trigger\\\"\\n     aria-hidden=\\\"true\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\">\\n    <span class=\\\"mat-select-placeholder\\\" *ngSwitchCase=\\\"true\\\">{{placeholder || '\\\\u00A0'}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span *ngSwitchDefault>{{triggerValue || '\\\\u00A0'}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'listbox',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-label]': '_getAriaLabel()',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    'class': 'mat-select',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc8.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup, { descendants: true }]\n        }], panelClass: [{\n            type: Input\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MatSelectTrigger]\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_required;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableOptionCentering;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_typeaheadDebounceInterval;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollStrategyFactory;\n    /**\n     * Whether or not the overlay panel is open.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._panelOpen;\n    /**\n     * Whether filling out the select is required in the form.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._required;\n    /**\n     * The scroll position of the overlay panel, calculated to center the selected option.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollTop;\n    /**\n     * The placeholder displayed in the trigger of the select.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._placeholder;\n    /**\n     * Whether the component is in multiple selection mode.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._multiple;\n    /**\n     * Comparison function to specify which option is displayed. Defaults to object equality.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._compareWith;\n    /**\n     * Unique id for this input.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._uid;\n    /**\n     * Emits whenever the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._destroy;\n    /**\n     * The last measured value for the trigger's client bounding rect.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerRect;\n    /**\n     * The aria-describedby attribute on the select for improved a11y.\n     * @type {?}\n     */\n    MatSelect.prototype._ariaDescribedby;\n    /**\n     * The cached font-size of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerFontSize;\n    /**\n     * Deals with the selection logic.\n     * @type {?}\n     */\n    MatSelect.prototype._selectionModel;\n    /**\n     * Manages keyboard events for options in the panel.\n     * @type {?}\n     */\n    MatSelect.prototype._keyManager;\n    /**\n     * `View -> model callback called when value changes`\n     * @type {?}\n     */\n    MatSelect.prototype._onChange;\n    /**\n     * `View -> model callback called when select has been touched`\n     * @type {?}\n     */\n    MatSelect.prototype._onTouched;\n    /**\n     * The IDs of child options to be passed to the aria-owns attribute.\n     * @type {?}\n     */\n    MatSelect.prototype._optionIds;\n    /**\n     * The value of the select panel's transform-origin property.\n     * @type {?}\n     */\n    MatSelect.prototype._transformOrigin;\n    /**\n     * Emits when the panel element is finished transforming in.\n     * @type {?}\n     */\n    MatSelect.prototype._panelDoneAnimatingStream;\n    /**\n     * Strategy that will be used to handle scrolling while the select panel is open.\n     * @type {?}\n     */\n    MatSelect.prototype._scrollStrategy;\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     * @type {?}\n     */\n    MatSelect.prototype._offsetY;\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     * @type {?}\n     */\n    MatSelect.prototype._positions;\n    /**\n     * Whether the component is disabling centering of the active option over the trigger.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._disableOptionCentering;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._focused;\n    /**\n     * A name for this control that can be used by `mat-form-field`.\n     * @type {?}\n     */\n    MatSelect.prototype.controlType;\n    /**\n     * Trigger that opens the select.\n     * @type {?}\n     */\n    MatSelect.prototype.trigger;\n    /**\n     * Panel containing the select options.\n     * @type {?}\n     */\n    MatSelect.prototype.panel;\n    /**\n     * Overlay pane containing the options.\n     * @deprecated To be turned into a private API.\n     * \\@breaking-change 10.0.0\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.overlayDir;\n    /**\n     * All of the defined select options.\n     * @type {?}\n     */\n    MatSelect.prototype.options;\n    /**\n     * All of the defined groups of options.\n     * @type {?}\n     */\n    MatSelect.prototype.optionGroups;\n    /**\n     * Classes to be passed to the select panel. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    MatSelect.prototype.panelClass;\n    /**\n     * User-supplied override of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype.customTrigger;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._value;\n    /**\n     * Aria label of the select. If not specified, the placeholder will be used as label.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabel;\n    /**\n     * Input that can be used to specify the `aria-labelledby` attribute.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabelledby;\n    /**\n     * Object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatSelect.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._typeaheadDebounceInterval;\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     * @type {?}\n     */\n    MatSelect.prototype.sortComparator;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._id;\n    /**\n     * Combined stream of all of the child options' change events.\n     * @type {?}\n     */\n    MatSelect.prototype.optionSelectionChanges;\n    /**\n     * Event emitted when the select panel has been toggled.\n     * @type {?}\n     */\n    MatSelect.prototype.openedChange;\n    /**\n     * Event emitted when the select has been opened.\n     * @type {?}\n     */\n    MatSelect.prototype._openedStream;\n    /**\n     * Event emitted when the select has been closed.\n     * @type {?}\n     */\n    MatSelect.prototype._closedStream;\n    /**\n     * Event emitted when the selected value has been changed by the user.\n     * @type {?}\n     */\n    MatSelect.prototype.selectionChange;\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.valueChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._parentFormField;\n    /** @type {?} */\n    MatSelect.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._liveAnnouncer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); }, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ],\n        MatFormFieldModule, MatOptionModule, MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect,\n        MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [MatFormFieldModule,\n        MatSelect,\n        MatSelectTrigger,\n        MatOptionModule, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule, MatCommonModule],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Input, ElementRef, NgModule } from '@angular/core';\nimport { CdkTable, CDK_TABLE_TEMPLATE, CDK_TABLE, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkFooterRow, CdkRow, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, Subject, Subscription, merge, of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n * @template T\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/table';\n\nconst _c0 = [[[\"caption\"]]];\nconst _c1 = [\"caption\"];\nfunction MatTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n} }\nfunction MatTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n} }\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /**\n         * Overrides the sticky CSS class set by the `CdkTable`.\n         */\n        this.stickyCssClass = 'mat-table-sticky';\n    }\n}\nMatTable.ɵfac = function MatTable_Factory(t) { return ɵMatTable_BaseFactory(t || MatTable); };\nMatTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTable, selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]], hostAttrs: [1, \"mat-table\"], exportAs: [\"matTable\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkTable, useExisting: MatTable },\n            { provide: CDK_TABLE, useExisting: MatTable }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function MatTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementContainer(1, 0);\n        ɵngcc0.ɵɵelementContainer(2, 1);\n        ɵngcc0.ɵɵelementContainer(3, 2);\n    } }, directives: [ɵngcc1.HeaderRowOutlet, ɵngcc1.DataRowOutlet, ɵngcc1.FooterRowOutlet], styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type,[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type,[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}\\n\"], encapsulation: 2 });\nconst ɵMatTable_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTable);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTable, [{\n        type: Component,\n        args: [{\n                selector: 'mat-table, table[mat-table]',\n                exportAs: 'matTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'mat-table'\n                },\n                providers: [\n                    { provide: CdkTable, useExisting: MatTable },\n                    { provide: CDK_TABLE, useExisting: MatTable }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type,[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type,[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}\\n\"]\n            }]\n    }], null, null); })();\nif (false) {\n    /**\n     * Overrides the sticky CSS class set by the `CdkTable`.\n     * @type {?}\n     * @protected\n     */\n    MatTable.prototype.stickyCssClass;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/cell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.ɵfac = function MatCellDef_Factory(t) { return ɵMatCellDef_BaseFactory(t || MatCellDef); };\nMatCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCellDef, selectors: [[\"\", \"matCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkCellDef, useExisting: MatCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matCellDef]',\n                providers: [{ provide: CdkCellDef, useExisting: MatCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.ɵfac = function MatHeaderCellDef_Factory(t) { return ɵMatHeaderCellDef_BaseFactory(t || MatHeaderCellDef); };\nMatHeaderCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCellDef, selectors: [[\"\", \"matHeaderCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderCellDef]',\n                providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.ɵfac = function MatFooterCellDef_Factory(t) { return ɵMatFooterCellDef_BaseFactory(t || MatFooterCellDef); };\nMatFooterCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCellDef, selectors: [[\"\", \"matFooterCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterCellDef]',\n                providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n}\nMatColumnDef.ɵfac = function MatColumnDef_Factory(t) { return ɵMatColumnDef_BaseFactory(t || MatColumnDef); };\nMatColumnDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatColumnDef, selectors: [[\"\", \"matColumnDef\", \"\"]], inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkColumnDef, useExisting: MatColumnDef },\n            { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['matColumnDef',] }]\n};\nconst ɵMatColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatColumnDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matColumnDef]',\n                inputs: ['sticky'],\n                providers: [\n                    { provide: CdkColumnDef, useExisting: MatColumnDef },\n                    { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n                ]\n            }]\n    }], null, { name: [{\n            type: Input,\n            args: ['matColumnDef']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatColumnDef.ngAcceptInputType_sticky;\n    /**\n     * Unique name for this column.\n     * @type {?}\n     */\n    MatColumnDef.prototype.name;\n}\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass MatHeaderCell extends CdkHeaderCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatHeaderCell.ɵfac = function MatHeaderCell_Factory(t) { return new (t || MatHeaderCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatHeaderCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCell, selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"mat-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-header-cell, th[mat-header-cell]',\n                host: {\n                    'class': 'mat-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass MatFooterCell extends CdkFooterCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatFooterCell.ɵfac = function MatFooterCell_Factory(t) { return new (t || MatFooterCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatFooterCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCell, selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-footer-cell, td[mat-footer-cell]',\n                host: {\n                    'class': 'mat-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Cell template container that adds the right classes and role.\n */\nclass MatCell extends CdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatCell.ɵfac = function MatCell_Factory(t) { return new (t || MatCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCell, selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-cell, td[mat-cell]',\n                host: {\n                    'class': 'mat-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/row.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.ɵfac = function MatHeaderRowDef_Factory(t) { return ɵMatHeaderRowDef_BaseFactory(t || MatHeaderRowDef); };\nMatHeaderRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderRowDef, selectors: [[\"\", \"matHeaderRowDef\", \"\"]], inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderRowDef]',\n                providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky']\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatHeaderRowDef.ngAcceptInputType_sticky;\n}\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.ɵfac = function MatFooterRowDef_Factory(t) { return ɵMatFooterRowDef_BaseFactory(t || MatFooterRowDef); };\nMatFooterRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterRowDef, selectors: [[\"\", \"matFooterRowDef\", \"\"]], inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterRowDef]',\n                providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky']\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatFooterRowDef.ngAcceptInputType_sticky;\n}\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.ɵfac = function MatRowDef_Factory(t) { return ɵMatRowDef_BaseFactory(t || MatRowDef); };\nMatRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRowDef, selectors: [[\"\", \"matRowDef\", \"\"]], inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRowDef, useExisting: MatRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matRowDef]',\n                providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen']\n            }]\n    }], null, null); })();\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ɵfac = function MatHeaderRow_Factory(t) { return ɵMatHeaderRow_BaseFactory(t || MatHeaderRow); };\nMatHeaderRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatHeaderRow, selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-header-row\"], exportAs: [\"matHeaderRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatHeaderRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-header-row, tr[mat-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matHeaderRow',\n                providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ɵfac = function MatFooterRow_Factory(t) { return ɵMatFooterRow_BaseFactory(t || MatFooterRow); };\nMatFooterRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFooterRow, selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-footer-row\"], exportAs: [\"matFooterRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRow, useExisting: MatFooterRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatFooterRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-footer-row, tr[mat-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matFooterRow',\n                providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }]\n            }]\n    }], null, null); })();\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatRow extends CdkRow {\n}\nMatRow.ɵfac = function MatRow_Factory(t) { return ɵMatRow_BaseFactory(t || MatRow); };\nMatRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatRow, selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-row\"], exportAs: [\"matRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRow, useExisting: MatRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-row, tr[mat-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRow',\n                providers: [{ provide: CdkRow, useExisting: MatRow }]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/text-column.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.ɵfac = function MatTextColumn_Factory(t) { return ɵMatTextColumn_BaseFactory(t || MatTextColumn); };\nMatTextColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTextColumn, selectors: [[\"mat-text-column\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 0, consts: [[\"matColumnDef\", \"\"], [\"mat-header-cell\", \"\", 3, \"text-align\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 3, \"text-align\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"]], template: function MatTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, MatTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [MatColumnDef,\n        MatHeaderCellDef,\n        MatCellDef,\n        MatHeaderCell,\n        MatCell], encapsulation: 2 });\nconst ɵMatTextColumn_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextColumn);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'mat-text-column',\n                template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTableModule });\nMatTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTableModule_Factory(t) { return new (t || MatTableModule)(); }, imports: [[\n            CdkTableModule,\n            MatCommonModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTableModule, { declarations: function () { return [MatTable,\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatTextColumn]; }, imports: function () { return [CdkTableModule,\n        MatCommonModule]; }, exports: function () { return [MatTable,\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatTextColumn]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTableModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CdkTableModule,\n                    MatCommonModule,\n                ],\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n * @type {?}\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n * @template T\n */\nclass MatTableDataSource extends DataSource {\n    /**\n     * @param {?=} initialData\n     */\n    constructor(initialData = []) {\n        super();\n        /**\n         * Stream emitting render data to the table (depends on ordered data changes).\n         */\n        this._renderData = new BehaviorSubject([]);\n        /**\n         * Stream that emits when a new filter string is set on the data source.\n         */\n        this._filter = new BehaviorSubject('');\n        /**\n         * Used to react to internal changes of the paginator that are made by the data source itself.\n         */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = Subscription.EMPTY;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (/**\n         * @param {?} data\n         * @param {?} sortHeaderId\n         * @return {?}\n         */\n        (data, sortHeaderId) => {\n            /** @type {?} */\n            const value = ((/** @type {?} */ (data)))[sortHeaderId];\n            if (_isNumberValue(value)) {\n                /** @type {?} */\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        });\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (/**\n         * @param {?} data\n         * @param {?} sort\n         * @return {?}\n         */\n        (data, sort) => {\n            /** @type {?} */\n            const active = sort.active;\n            /** @type {?} */\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                /** @type {?} */\n                let valueA = this.sortingDataAccessor(a, active);\n                /** @type {?} */\n                let valueB = this.sortingDataAccessor(b, active);\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                /** @type {?} */\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            }));\n        });\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @return Whether the filter matches against the data\n         */\n        this.filterPredicate = (/**\n         * @param {?} data\n         * @param {?} filter\n         * @return {?}\n         */\n        (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            /** @type {?} */\n            const dataStr = Object.keys(data).reduce((/**\n             * @param {?} currentTerm\n             * @param {?} key\n             * @return {?}\n             */\n            (currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + ((/** @type {?} */ (data)))[key] + '◬';\n            }), '').toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            /** @type {?} */\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        });\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /**\n     * Array of data that should be rendered by the table, where each object represents one row.\n     * @return {?}\n     */\n    get data() { return this._data.value; }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    set data(data) { this._data.next(data); }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     * @return {?}\n     */\n    get filter() { return this._filter.value; }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    set filter(filter) { this._filter.next(filter); }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     * @return {?}\n     */\n    get sort() { return this._sort; }\n    /**\n     * @param {?} sort\n     * @return {?}\n     */\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     * @return {?}\n     */\n    get paginator() { return this._paginator; }\n    /**\n     * @param {?} paginator\n     * @return {?}\n     */\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     * @return {?}\n     */\n    _updateChangeSubscription() {\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        /** @type {?} */\n        const sortChange = this._sort ?\n            (/** @type {?} */ (merge(this._sort.sortChange, this._sort.initialized))) :\n            of(null);\n        /** @type {?} */\n        const pageChange = this._paginator ?\n            (/** @type {?} */ (merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized))) :\n            of(null);\n        /** @type {?} */\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        /** @type {?} */\n        const filteredData = combineLatest([dataStream, this._filter])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._filterData(data))));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        /** @type {?} */\n        const orderedData = combineLatest([filteredData, sortChange])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._orderData(data))));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        /** @type {?} */\n        const paginatedData = combineLatest([orderedData, pageChange])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._pageData(data))));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => this._renderData.next(data)));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData =\n            !this.filter ? data : data.filter((/**\n             * @param {?} obj\n             * @return {?}\n             */\n            obj => this.filterPredicate(obj, this.filter)));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     * @param {?} data\n     * @return {?}\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        /** @type {?} */\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     * @param {?} filteredDataLength\n     * @return {?}\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                /** @type {?} */\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                /** @type {?} */\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        }));\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * \\@docs-private\n     * @return {?}\n     */\n    connect() { return this._renderData; }\n    /**\n     * Used by the MatTable. Called when it is destroyed. No-op.\n     * \\@docs-private\n     * @return {?}\n     */\n    disconnect() { }\n}\nif (false) {\n    /**\n     * Stream that emits when a new data array is set on the data source.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._data;\n    /**\n     * Stream emitting render data to the table (depends on ordered data changes).\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._renderData;\n    /**\n     * Stream that emits when a new filter string is set on the data source.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._filter;\n    /**\n     * Used to react to internal changes of the paginator that are made by the data source itself.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._internalPageChanges;\n    /**\n     * Subscription to the changes that should trigger an update to the table's rendered rows, such\n     * as filtering, sorting, pagination, or base data changes.\n     * @type {?}\n     */\n    MatTableDataSource.prototype._renderChangesSubscription;\n    /**\n     * The filtered set of data that has been matched by the filter string, or all the data if there\n     * is no filter. Useful for knowing the set of data the table represents.\n     * For example, a 'selectAll()' function would likely want to select the set of filtered data\n     * shown to the user rather than all the data.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.filteredData;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._sort;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._paginator;\n    /**\n     * Data accessor function that is used for accessing data properties for sorting through\n     * the default sortData function.\n     * This default function assumes that the sort header IDs (which defaults to the column name)\n     * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n     * May be set to a custom function for different behavior.\n     * \\@param data Data object that is being accessed.\n     * \\@param sortHeaderId The name of the column that represents the data.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.sortingDataAccessor;\n    /**\n     * Gets a sorted copy of the data array based on the state of the MatSort. Called\n     * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n     * By default, the function retrieves the active sort and its direction and compares data\n     * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n     * of data ordering.\n     * \\@param data The array of data that should be sorted.\n     * \\@param sort The connected MatSort that holds the current sort state.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.sortData;\n    /**\n     * Checks if a data object matches the data source's filter string. By default, each data object\n     * is converted to a string of its properties and returns true if the filter has\n     * at least one occurrence in that string. By default, the filter string has its whitespace\n     * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n     * filter matching.\n     * \\@param data Data object used to check against the filter.\n     * \\@param filter Filter string that has been set on the data source.\n     * \\@return Whether the filter matches against the data\n     * @type {?}\n     */\n    MatTableDataSource.prototype.filterPredicate;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn };\n\n//# sourceMappingURL=table.js.map","import { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { AriaDescriber, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, ViewContainerRef, NgZone, Inject, Optional, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ScrollDispatcher } from '@angular/cdk/scrolling';\nimport { Subject } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/tooltip-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by MatTooltip.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/overlay';\nimport * as ɵngcc2 from '@angular/cdk/scrolling';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\nimport * as ɵngcc6 from '@angular/cdk/layout';\nimport * as ɵngcc7 from '@angular/common';\nconst matTooltipAnimations = {\n    /**\n     * Animation that transitions a tooltip in and out.\n     */\n    tooltipState: trigger('state', [\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('200ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(0)', offset: 0 }),\n            style({ opacity: 0.5, transform: 'scale(0.99)', offset: 0.5 }),\n            style({ opacity: 1, transform: 'scale(1)', offset: 1 })\n        ]))),\n        transition('* => hidden', animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({ opacity: 0 }))),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/tooltip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle repositioning after scroll events.\n * @type {?}\n */\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * CSS class that will be attached to the overlay panel.\n * @type {?}\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\n/**\n * Options used to bind passive event listeners.\n * @type {?}\n */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Time between the user putting the pointer on a tooltip\n * trigger and the long press event being fired.\n * @type {?}\n */\nconst LONGPRESS_DELAY = 500;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/**\n * Injection token that determines the scroll handling while a tooltip is visible.\n * @type {?}\n */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS }));\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Default `matTooltip` options that can be overridden.\n * @record\n */\nfunction MatTooltipDefaultOptions() { }\nif (false) {\n    /** @type {?} */\n    MatTooltipDefaultOptions.prototype.showDelay;\n    /** @type {?} */\n    MatTooltipDefaultOptions.prototype.hideDelay;\n    /** @type {?} */\n    MatTooltipDefaultOptions.prototype.touchendHideDelay;\n    /** @type {?|undefined} */\n    MatTooltipDefaultOptions.prototype.touchGestures;\n    /** @type {?|undefined} */\n    MatTooltipDefaultOptions.prototype.position;\n}\n/**\n * Injection token to be used to override the default options for `matTooltip`.\n * @type {?}\n */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip {\n    /**\n     * @param {?} _overlay\n     * @param {?} _elementRef\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewContainerRef\n     * @param {?} _ngZone\n     * @param {?} _platform\n     * @param {?} _ariaDescriber\n     * @param {?} _focusMonitor\n     * @param {?} scrollStrategy\n     * @param {?} _dir\n     * @param {?} _defaultOptions\n     * @param {?=} _hammerLoader\n     */\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, \n    /**\n     * @deprecated _hammerLoader parameter to be removed.\n     * @breaking-change 9.0.0\n     */\n    // Note that we need to give Angular something to inject here so it doesn't throw.\n    _hammerLoader) {\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._disabled = false;\n        /**\n         * The default delay in ms before showing the tooltip after show is called\n         */\n        this.showDelay = this._defaultOptions.showDelay;\n        /**\n         * The default delay in ms before hiding the tooltip after hide is called\n         */\n        this.hideDelay = this._defaultOptions.hideDelay;\n        /**\n         * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n         * uses a long press gesture to show and hide, however it can conflict with the native browser\n         * gestures. To work around the conflict, Angular Material disables native gestures on the\n         * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n         * elements). The different values for this option configure the touch event handling as follows:\n         * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n         *   browser gestures on particular elements. In particular, it allows text selection on inputs\n         *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n         * - `on` - Enables touch gestures for all elements and disables native\n         *   browser gestures with no exceptions.\n         * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n         *   showing on touch devices.\n         */\n        this.touchGestures = 'auto';\n        this._message = '';\n        /**\n         * Manually-bound passive event listeners.\n         */\n        this._passiveListeners = new Map();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Handles the keydown events on the host element.\n         * Needs to be an arrow function so that we can use it in addEventListener.\n         */\n        this._handleKeydown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this.hide(0)));\n            }\n        });\n        this._scrollStrategy = scrollStrategy;\n        if (_defaultOptions) {\n            if (_defaultOptions.position) {\n                this.position = _defaultOptions.position;\n            }\n            if (_defaultOptions.touchGestures) {\n                this.touchGestures = _defaultOptions.touchGestures;\n            }\n        }\n        _focusMonitor.monitor(_elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                _ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this.hide(0)));\n            }\n            else if (origin === 'keyboard') {\n                _ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this.show()));\n            }\n        }));\n        _ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            _elementRef.nativeElement.addEventListener('keydown', this._handleKeydown);\n        }));\n    }\n    /**\n     * Allows the user to define the position of the tooltip relative to the parent element\n     * @return {?}\n     */\n    get position() { return this._position; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set position(value) {\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition();\n                if (this._tooltipInstance) {\n                    (/** @type {?} */ (this._tooltipInstance)).show(0);\n                }\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /**\n     * Disables the display of the tooltip.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // If tooltip is disabled, hide immediately.\n        if (this._disabled) {\n            this.hide(0);\n        }\n    }\n    /**\n     * The message to be displayed in the tooltip\n     * @return {?}\n     */\n    get message() { return this._message; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set message(value) {\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        this._message = value != null ? `${value}`.trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._updateTooltipMessage();\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n                // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n                // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n                // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\n                }));\n            }));\n        }\n    }\n    /**\n     * Classes to be passed to the tooltip. Supports the same syntax as `ngClass`.\n     * @return {?}\n     */\n    get tooltipClass() { return this._tooltipClass; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    /**\n     * Setup styling-specific things\n     * @return {?}\n     */\n    ngOnInit() {\n        // This needs to happen in `ngOnInit` so the initial values for all inputs have been set.\n        this._setupPointerEvents();\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const nativeElement = this._elementRef.nativeElement;\n        clearTimeout(this._touchstartTimeout);\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        nativeElement.removeEventListener('keydown', this._handleKeydown);\n        this._passiveListeners.forEach((/**\n         * @param {?} listener\n         * @param {?} event\n         * @return {?}\n         */\n        (listener, event) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        }));\n        this._passiveListeners.clear();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._ariaDescriber.removeDescription(nativeElement, this.message);\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /**\n     * Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    show(delay = this.showDelay) {\n        if (this.disabled || !this.message || (this._isTooltipVisible() &&\n            !(/** @type {?} */ (this._tooltipInstance))._showTimeoutId && !(/** @type {?} */ (this._tooltipInstance))._hideTimeoutId)) {\n            return;\n        }\n        /** @type {?} */\n        const overlayRef = this._createOverlay();\n        this._detach();\n        this._portal = this._portal || new ComponentPortal(TooltipComponent, this._viewContainerRef);\n        this._tooltipInstance = overlayRef.attach(this._portal).instance;\n        this._tooltipInstance.afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._detach()));\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        (/** @type {?} */ (this._tooltipInstance)).show(delay);\n    }\n    /**\n     * Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    hide(delay = this.hideDelay) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.hide(delay);\n        }\n    }\n    /**\n     * Shows/hides the tooltip\n     * @return {?}\n     */\n    toggle() {\n        this._isTooltipVisible() ? this.hide() : this.show();\n    }\n    /**\n     * Returns true if the tooltip is currently visible to the user\n     * @return {?}\n     */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /**\n     * Create the overlay config and position strategy\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n        /** @type {?} */\n        const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n        // Create connected position strategy that listens for scroll events to reposition.\n        /** @type {?} */\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._elementRef)\n            .withTransformOriginOn('.mat-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} change\n         * @return {?}\n         */\n        change => {\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run((/**\n                     * @return {?}\n                     */\n                    () => this.hide(0)));\n                }\n            }\n        }));\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: TOOLTIP_PANEL_CLASS,\n            scrollStrategy: this._scrollStrategy()\n        });\n        this._updatePosition();\n        this._overlayRef.detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._detach()));\n        return this._overlayRef;\n    }\n    /**\n     * Detaches the currently-attached tooltip.\n     * @private\n     * @return {?}\n     */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /**\n     * Updates the position of the current tooltip.\n     * @private\n     * @return {?}\n     */\n    _updatePosition() {\n        /** @type {?} */\n        const position = (/** @type {?} */ ((/** @type {?} */ (this._overlayRef)).getConfig().positionStrategy));\n        /** @type {?} */\n        const origin = this._getOrigin();\n        /** @type {?} */\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            Object.assign(Object.assign({}, origin.main), overlay.main),\n            Object.assign(Object.assign({}, origin.fallback), overlay.fallback)\n        ]);\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     * @return {?}\n     */\n    _getOrigin() {\n        /** @type {?} */\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        /** @type {?} */\n        const position = this.position;\n        /** @type {?} */\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y }\n        };\n    }\n    /**\n     * Returns the overlay position and a fallback position based on the user's preference\n     * @return {?}\n     */\n    _getOverlayPosition() {\n        /** @type {?} */\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        /** @type {?} */\n        const position = this.position;\n        /** @type {?} */\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y }\n        };\n    }\n    /**\n     * Updates the tooltip message and repositions the overlay according to the new message length\n     * @private\n     * @return {?}\n     */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1), takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._tooltipInstance) {\n                    (/** @type {?} */ (this._overlayRef)).updatePosition();\n                }\n            }));\n        }\n    }\n    /**\n     * Updates the tooltip class\n     * @private\n     * @param {?} tooltipClass\n     * @return {?}\n     */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /**\n     * Inverts an overlay position.\n     * @private\n     * @param {?} x\n     * @param {?} y\n     * @return {?}\n     */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /**\n     * Binds the pointer events to the tooltip trigger.\n     * @private\n     * @return {?}\n     */\n    _setupPointerEvents() {\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (!this._platform.IOS && !this._platform.ANDROID) {\n            this._passiveListeners\n                .set('mouseenter', (/**\n             * @return {?}\n             */\n            () => this.show()))\n                .set('mouseleave', (/**\n             * @return {?}\n             */\n            () => this.hide()));\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            /** @type {?} */\n            const touchendListener = (/**\n             * @return {?}\n             */\n            () => {\n                clearTimeout(this._touchstartTimeout);\n                this.hide(this._defaultOptions.touchendHideDelay);\n            });\n            this._passiveListeners\n                .set('touchend', touchendListener)\n                .set('touchcancel', touchendListener)\n                .set('touchstart', (/**\n             * @return {?}\n             */\n            () => {\n                // Note that it's important that we don't `preventDefault` here,\n                // because it can prevent click events from firing on the element.\n                clearTimeout(this._touchstartTimeout);\n                this._touchstartTimeout = setTimeout((/**\n                 * @return {?}\n                 */\n                () => this.show()), LONGPRESS_DELAY);\n            }));\n        }\n        this._passiveListeners.forEach((/**\n         * @param {?} listener\n         * @param {?} event\n         * @return {?}\n         */\n        (listener, event) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        }));\n    }\n    /**\n     * Disables the native browser gestures, based on how the tooltip has been configured.\n     * @private\n     * @return {?}\n     */\n    _disableNativeGesturesIfNecessary() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const style = element.style;\n        /** @type {?} */\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect = style.msUserSelect = style.webkitUserSelect =\n                    ((/** @type {?} */ (style))).MozUserSelect = 'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                ((/** @type {?} */ (style))).webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n}\nMatTooltip.ɵfac = function MatTooltip_Factory(t) { return new (t || MatTooltip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AriaDescriber), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_TOOLTIP_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_TOOLTIP_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ElementRef)); };\nMatTooltip.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTooltip, selectors: [[\"\", \"matTooltip\", \"\"]], inputs: { showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], position: [\"matTooltipPosition\", \"position\"], disabled: [\"matTooltipDisabled\", \"disabled\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] }, exportAs: [\"matTooltip\"] });\n/** @nocollapse */\nMatTooltip.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: AriaDescriber },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TOOLTIP_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TOOLTIP_DEFAULT_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [ElementRef,] }] }\n];\nMatTooltip.propDecorators = {\n    position: [{ type: Input, args: ['matTooltipPosition',] }],\n    disabled: [{ type: Input, args: ['matTooltipDisabled',] }],\n    showDelay: [{ type: Input, args: ['matTooltipShowDelay',] }],\n    hideDelay: [{ type: Input, args: ['matTooltipHideDelay',] }],\n    touchGestures: [{ type: Input, args: ['matTooltipTouchGestures',] }],\n    message: [{ type: Input, args: ['matTooltip',] }],\n    tooltipClass: [{ type: Input, args: ['matTooltipClass',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTooltip, [{\n        type: Directive,\n        args: [{\n                selector: '[matTooltip]',\n                exportAs: 'matTooltip'\n            }]\n    }], function () { return [{ type: ɵngcc1.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ScrollDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc3.Platform }, { type: ɵngcc4.AriaDescriber }, { type: ɵngcc4.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TOOLTIP_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_TOOLTIP_DEFAULT_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [ElementRef]\n            }] }]; }, { showDelay: [{\n            type: Input,\n            args: ['matTooltipShowDelay']\n        }], hideDelay: [{\n            type: Input,\n            args: ['matTooltipHideDelay']\n        }], touchGestures: [{\n            type: Input,\n            args: ['matTooltipTouchGestures']\n        }], position: [{\n            type: Input,\n            args: ['matTooltipPosition']\n        }], disabled: [{\n            type: Input,\n            args: ['matTooltipDisabled']\n        }], message: [{\n            type: Input,\n            args: ['matTooltip']\n        }], tooltipClass: [{\n            type: Input,\n            args: ['matTooltipClass']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTooltip.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatTooltip.ngAcceptInputType_hideDelay;\n    /** @type {?} */\n    MatTooltip.ngAcceptInputType_showDelay;\n    /** @type {?} */\n    MatTooltip.prototype._overlayRef;\n    /** @type {?} */\n    MatTooltip.prototype._tooltipInstance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._tooltipClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._scrollStrategy;\n    /**\n     * The default delay in ms before showing the tooltip after show is called\n     * @type {?}\n     */\n    MatTooltip.prototype.showDelay;\n    /**\n     * The default delay in ms before hiding the tooltip after hide is called\n     * @type {?}\n     */\n    MatTooltip.prototype.hideDelay;\n    /**\n     * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n     * uses a long press gesture to show and hide, however it can conflict with the native browser\n     * gestures. To work around the conflict, Angular Material disables native gestures on the\n     * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n     * elements). The different values for this option configure the touch event handling as follows:\n     * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n     *   browser gestures on particular elements. In particular, it allows text selection on inputs\n     *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n     * - `on` - Enables touch gestures for all elements and disables native\n     *   browser gestures with no exceptions.\n     * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n     *   showing on touch devices.\n     * @type {?}\n     */\n    MatTooltip.prototype.touchGestures;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._message;\n    /**\n     * Manually-bound passive event listeners.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._passiveListeners;\n    /**\n     * Timer started at the last `touchstart` event.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._touchstartTimeout;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._destroyed;\n    /**\n     * Handles the keydown events on the host element.\n     * Needs to be an arrow function so that we can use it in addEventListener.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._handleKeydown;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._ariaDescriber;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._defaultOptions;\n}\n/**\n * Internal component that wraps the tooltip's content.\n * \\@docs-private\n */\nclass TooltipComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _breakpointObserver\n     */\n    constructor(_changeDetectorRef, _breakpointObserver) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._breakpointObserver = _breakpointObserver;\n        /**\n         * Property watched by the animation framework to show or hide the tooltip\n         */\n        this._visibility = 'initial';\n        /**\n         * Whether interactions on the page should close the tooltip\n         */\n        this._closeOnInteraction = false;\n        /**\n         * Subject for notifying that the tooltip has been hidden from the view\n         */\n        this._onHide = new Subject();\n        /**\n         * Stream that emits whether the user has a handset-sized display.\n         */\n        this._isHandset = this._breakpointObserver.observe(Breakpoints.Handset);\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param {?} delay Amount of milliseconds to the delay showing the tooltip.\n     * @return {?}\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId) {\n            clearTimeout(this._hideTimeoutId);\n            this._hideTimeoutId = null;\n        }\n        // Body interactions should cancel the tooltip if there is a delay in showing.\n        this._closeOnInteraction = true;\n        this._showTimeoutId = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._visibility = 'visible';\n            this._showTimeoutId = null;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }), delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param {?} delay Amount of milliseconds to delay showing the tooltip.\n     * @return {?}\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId) {\n            clearTimeout(this._showTimeoutId);\n            this._showTimeoutId = null;\n        }\n        this._hideTimeoutId = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._visibility = 'hidden';\n            this._hideTimeoutId = null;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }), delay);\n    }\n    /**\n     * Returns an observable that notifies when the tooltip has been hidden from view.\n     * @return {?}\n     */\n    afterHidden() {\n        return this._onHide.asObservable();\n    }\n    /**\n     * Whether the tooltip is being displayed.\n     * @return {?}\n     */\n    isVisible() {\n        return this._visibility === 'visible';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._onHide.complete();\n    }\n    /**\n     * @return {?}\n     */\n    _animationStart() {\n        this._closeOnInteraction = false;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationDone(event) {\n        /** @type {?} */\n        const toState = (/** @type {?} */ (event.toState));\n        if (toState === 'hidden' && !this.isVisible()) {\n            this._onHide.next();\n        }\n        if (toState === 'visible' || toState === 'hidden') {\n            this._closeOnInteraction = true;\n        }\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     * @return {?}\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     * @return {?}\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n}\nTooltipComponent.ɵfac = function TooltipComponent_Factory(t) { return new (t || TooltipComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.BreakpointObserver)); };\nTooltipComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TooltipComponent, selectors: [[\"mat-tooltip-component\"]], hostAttrs: [\"aria-hidden\", \"true\"], hostVars: 2, hostBindings: function TooltipComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function TooltipComponent_click_HostBindingHandler() { return ctx._handleBodyInteraction(); }, false, ɵngcc0.ɵɵresolveBody);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"zoom\", ctx._visibility === \"visible\" ? 1 : null);\n    } }, decls: 3, vars: 7, consts: [[1, \"mat-tooltip\", 3, \"ngClass\"]], template: function TooltipComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"@state.start\", function TooltipComponent_Template_div_animation_state_start_0_listener() { return ctx._animationStart(); })(\"@state.done\", function TooltipComponent_Template_div_animation_state_done_0_listener($event) { return ctx._animationDone($event); });\n        ɵngcc0.ɵɵpipe(1, \"async\");\n        ɵngcc0.ɵɵtext(2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        var tmp_0_0 = null;\n        const currVal_0 = (tmp_0_0 = ɵngcc0.ɵɵpipeBind1(1, 5, ctx._isHandset)) == null ? null : tmp_0_0.matches;\n        ɵngcc0.ɵɵclassProp(\"mat-tooltip-handset\", currVal_0);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.tooltipClass)(\"@state\", ctx._visibility);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate(ctx.message);\n    } }, directives: [ɵngcc7.NgClass], pipes: [ɵngcc7.AsyncPipe], styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"], encapsulation: 2, data: { animation: [matTooltipAnimations.tooltipState] }, changeDetection: 0 });\n/** @nocollapse */\nTooltipComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: BreakpointObserver }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TooltipComponent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tooltip-component',\n                template: \"<div class=\\\"mat-tooltip\\\"\\n     [ngClass]=\\\"tooltipClass\\\"\\n     [class.mat-tooltip-handset]=\\\"(_isHandset | async)?.matches\\\"\\n     [@state]=\\\"_visibility\\\"\\n     (@state.start)=\\\"_animationStart()\\\"\\n     (@state.done)=\\\"_animationDone($event)\\\">{{message}}</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [matTooltipAnimations.tooltipState],\n                host: {\n                    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n                    // won't be rendered if the animations are disabled or there is no web animations polyfill.\n                    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n                    '(body:click)': 'this._handleBodyInteraction()',\n                    'aria-hidden': 'true'\n                },\n                styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.BreakpointObserver }]; }, null); })();\nif (false) {\n    /**\n     * Message to display in the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype.message;\n    /**\n     * Classes to be added to the tooltip. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    TooltipComponent.prototype.tooltipClass;\n    /**\n     * The timeout ID of any current timer set to show the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype._showTimeoutId;\n    /**\n     * The timeout ID of any current timer set to hide the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype._hideTimeoutId;\n    /**\n     * Property watched by the animation framework to show or hide the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype._visibility;\n    /**\n     * Whether interactions on the page should close the tooltip\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._closeOnInteraction;\n    /**\n     * Subject for notifying that the tooltip has been hidden from the view\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._onHide;\n    /**\n     * Stream that emits whether the user has a handset-sized display.\n     * @type {?}\n     */\n    TooltipComponent.prototype._isHandset;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._breakpointObserver;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/tooltip-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatTooltipModule {\n}\nMatTooltipModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTooltipModule });\nMatTooltipModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTooltipModule_Factory(t) { return new (t || MatTooltipModule)(); }, providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            A11yModule,\n            CommonModule,\n            OverlayModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTooltipModule, { declarations: function () { return [MatTooltip,\n        TooltipComponent]; }, imports: function () { return [A11yModule,\n        CommonModule,\n        OverlayModule,\n        MatCommonModule]; }, exports: function () { return [MatTooltip,\n        TooltipComponent,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTooltipModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    A11yModule,\n                    CommonModule,\n                    OverlayModule,\n                    MatCommonModule,\n                ],\n                exports: [MatTooltip, TooltipComponent, MatCommonModule],\n                declarations: [MatTooltip, TooltipComponent],\n                entryComponents: [TooltipComponent],\n                providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, getMatTooltipInvalidPositionError, matTooltipAnimations };\n\n//# sourceMappingURL=tooltip.js.map"]}