{"version":3,"sources":["webpack:///src/app/fees/add-fees/add-fees.component.ts","webpack:///src/app/fees/add-fees/add-fees.component.html","webpack:///src/app/fees/all-fees/all-fees.component.ts","webpack:///src/app/fees/all-fees/all-fees.component.html","webpack:///src/app/fees/all-fees/dialogs/delete/delete.component.ts","webpack:///src/app/fees/all-fees/dialogs/delete/delete.component.html","webpack:///src/app/fees/all-fees/dialogs/form-dialog/form-dialog.component.ts","webpack:///src/app/fees/all-fees/dialogs/form-dialog/form-dialog.component.html","webpack:///src/app/fees/all-fees/fees.model.ts","webpack:///src/app/fees/edit-fees/edit-fees.component.ts","webpack:///src/app/fees/edit-fees/edit-fees.component.html","webpack:///src/app/fees/fee-receipt/fee-receipt.component.ts","webpack:///src/app/fees/fee-receipt/fee-receipt.component.html","webpack:///src/app/fees/fees-routing.module.ts","webpack:///src/app/fees/fees.module.ts"],"names":["AddFeesComponent","fb","feesForm","group","rollNo","required","sName","fType","department","date","invoiceNo","pType","status","amount","duration","details","console","log","value","onSubmit","selector","templateUrl","styleUrls","$event","stopPropagation","AllFeesComponent","httpClient","dialog","feesService","snackBar","displayedColumns","contextMenuPosition","x","y","loadData","dialogRef","open","data","fees","action","afterClosed","subscribe","result","exampleDatabase","dataChange","unshift","getDialogData","refreshTable","showNotification","row","id","foundIndex","findIndex","splice","paginator","_changePageSize","pageSize","dataSource","ExampleDataSource","sort","filter","nativeElement","colorName","text","placementFrom","placementAlign","verticalPosition","horizontalPosition","panelClass","event","item","preventDefault","clientX","clientY","contextMenu","menuData","menu","focusFirstItem","openMenu","addNew","refresh","_exampleDatabase","_paginator","_sort","_filterChange","filteredData","renderedData","pageIndex","displayDataChanges","sortChange","page","getAllFeess","pipe","slice","searchStr","toLowerCase","indexOf","sortedData","sortData","startIndex","active","direction","a","b","propertyA","propertyB","valueA","isNaN","valueB","next","DeleteDialogComponent","close","deleteFees","confirmDelete","onNoClick","FormDialogComponent","formControl","dialogTitle","createContactForm","hasError","addFees","getRawValue","provide","useValue","confirmAdd","providers","Fees","getRandomID","Date","S4","Math","random","toString","substring","EditFeesComponent","formdata","FeeReceiptComponent","routes","path","component","FeesRoutingModule","forChild","imports","exports","FeesModule","declarations"],"mappings":"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","file":"fees-fees-module-es5.js","sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-fees',\n  templateUrl: './add-fees.component.html',\n  styleUrls: ['./add-fees.component.sass']\n})\nexport class AddFeesComponent {\n  feesForm: FormGroup;\n  constructor(private fb: FormBuilder) {\n    this.feesForm = this.fb.group({\n      rollNo: ['', [Validators.required]],\n      sName: ['', [Validators.required]],\n      fType: ['', [Validators.required]],\n      department: ['', [Validators.required]],\n      date: ['', [Validators.required]],\n      invoiceNo: ['', [Validators.required]],\n      pType: ['', [Validators.required]],\n      status: ['', [Validators.required]],\n      amount: ['', [Validators.required]],\n      duration: ['', [Validators.required]],\n      details: ['']\n    });\n  }\n  onSubmit() {\n    console.log('Form Value', this.feesForm.value);\n  }\n}\n","<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"block-header\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                    <ul class=\"breadcrumb breadcrumb-style \">\n                        <li class=\"breadcrumb-item\">\n                            <h4 class=\"page-title\">Fees</h4>\n                        </li>\n                        <li class=\"breadcrumb-item bcrumb-1\">\n                            <a routerLink=\"/dashboard/main\">\n                                <i class=\"fas fa-home\"></i> Home</a>\n                        </li>\n                        <li class=\"breadcrumb-item bcrumb-2\">\n                            <a href=\"#\" onClick=\"return false;\">Fees</a>\n                        </li>\n                        <li class=\"breadcrumb-item active\">Add Fees Details</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <div class=\"row clearfix\">\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                <div class=\"card\">\n                    <div class=\"header\">\n                        <h2>Add Fees Details</h2>\n                        <ul class=\"header-dropdown m-r--5\">\n                            <li class=\"dropdown\">\n                                <a href=\"#\" onClick=\"return false;\" data-toggle=\"dropdown\" role=\"button\"\n                                    aria-haspopup=\"true\" aria-expanded=\"false\">\n                                    <i class=\"material-icons\">more_vert</i>\n                                </a>\n                                <ul class=\"dropdown-menu pull-right\">\n                                    <li>\n                                        <a href=\"#\" onClick=\"return false;\">Action</a>\n                                    </li>\n                                    <li>\n                                        <a href=\"#\" onClick=\"return false;\">Another action</a>\n                                    </li>\n                                    <li>\n                                        <a href=\"#\" onClick=\"return false;\">Something else here</a>\n                                    </li>\n                                </ul>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class=\"body\">\n                        <form class=\"register-form m-4\" [formGroup]=\"feesForm\" (ngSubmit)=\"onSubmit()\">\n                            <div class=\"row\">\n                                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                        <mat-label>Roll No</mat-label>\n                                        <input matInput formControlName=\"rollNo\" required>\n                                        <mat-icon matSuffix>label</mat-icon>\n                                        <mat-error *ngIf=\"feesForm.get('rollNo').hasError('required')\">\n                                            Please enter roll no\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                        <mat-label>Student Name</mat-label>\n                                        <input matInput formControlName=\"sName\" required>\n                                        <mat-icon matSuffix>account_circle</mat-icon>\n                                        <mat-error *ngIf=\"feesForm.get('sName').hasError('required')\">\n                                            Please enter student name\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                        <mat-label>Select Department</mat-label>\n                                        <mat-select formControlName=\"department\" required>\n                                            <mat-option [value]=\"'mechanical'\">\n                                                Mechanical\n                                            </mat-option>\n                                            <mat-option [value]=\"'science'\">\n                                                Science\n                                            </mat-option>\n                                            <mat-option [value]=\"'mathematics'\">\n                                                Mathematics\n                                            </mat-option>\n                                            <mat-option [value]=\"'computer'\">\n                                                Computer\n                                            </mat-option>\n                                        </mat-select>\n                                        <mat-error *ngIf=\"feesForm.get('department').hasError('required')\">\n                                            Select Any Department\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width \" appearance=\"outline\">\n                                        <mat-label>Fees Type</mat-label>\n                                        <mat-select formControlName=\"fType\" required>\n                                            <mat-option [value]=\"'annual'\">\n                                                Annual\n                                            </mat-option>\n                                            <mat-option [value]=\"'tution'\">\n                                                Tution\n                                            </mat-option>\n                                            <mat-option [value]=\"'transport'\">\n                                                Transport\n                                            </mat-option>\n                                            <mat-option [value]=\"'exam'\">\n                                                Exam\n                                            </mat-option>\n                                            <mat-option [value]=\"'library'\">\n                                                Library\n                                            </mat-option>\n                                            <mat-option [value]=\"'other'\">\n                                                Other\n                                            </mat-option>\n                                        </mat-select>\n                                        <mat-error *ngIf=\"feesForm.get('fType').hasError('required')\">\n                                            Select Fees Type\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                    <div class=\"m-b-20\">\n                                        <mat-label class=\"mr-3\">Duration:</mat-label>\n                                        <mat-radio-group aria-label=\"Select duration\" formControlName=\"duration\"\n                                            required>\n                                            <mat-radio-button value=\"monthly\">Monthly</mat-radio-button>\n                                            <mat-radio-button value=\"yearly\">Yearly</mat-radio-button>\n                                            <mat-radio-button value=\"session\">Session</mat-radio-button>\n                                            <mat-error *ngIf=\"feesForm.get('duration').hasError('required')\">\n                                                Select Duration\n                                            </mat-error>\n                                        </mat-radio-group>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                        <mat-label>Collection Date</mat-label>\n                                        <input matInput [matDatepicker]=\"picker1\" formControlName=\"date\" required>\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n                                        <mat-datepicker #picker1 touchUi></mat-datepicker>\n                                        <mat-error *ngIf=\"feesForm.get('date').hasError('required')\">\n                                            Please select date\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                        <mat-label>Payment Type</mat-label>\n                                        <mat-select formControlName=\"pType\" required>\n                                            <mat-option [value]=\"'cash'\">\n                                                Cash\n                                            </mat-option>\n                                            <mat-option [value]=\"'cheque'\">\n                                                Cheque\n                                            </mat-option>\n                                            <mat-option [value]=\"'online transfer'\">\n                                                Online Transfer\n                                            </mat-option>\n                                            <mat-option [value]=\"'credit card'\">\n                                                Draft\n                                            </mat-option>\n                                            <mat-option [value]=\"'other'\">\n                                                Other\n                                            </mat-option>\n                                        </mat-select>\n                                        <mat-error *ngIf=\"feesForm.get('pType').hasError('required')\">\n                                            Select Status\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                        <mat-label>Invoice Number</mat-label>\n                                        <input matInput formControlName=\"invoiceNo\" required>\n                                        <mat-icon matSuffix>receipt</mat-icon>\n                                        <mat-error *ngIf=\"feesForm.get('invoiceNo').hasError('required')\">\n                                            Enter Invoice Number\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                        <mat-label>Status</mat-label>\n                                        <mat-select formControlName=\"status\" required>\n                                            <mat-option [value]=\"'paid'\">\n                                                Paid\n                                            </mat-option>\n                                            <mat-option [value]=\"'unpaid'\">\n                                                Unpaid\n                                            </mat-option>\n                                            <mat-option [value]=\"'pending'\">\n                                                Pending\n                                            </mat-option>\n                                        </mat-select>\n                                        <mat-error *ngIf=\"feesForm.get('status').hasError('required')\">\n                                            Select Status\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                        <mat-label>Amount</mat-label>\n                                        <input matInput formControlName=\"amount\" required>\n                                        <mat-icon matSuffix>monetization_on</mat-icon>\n                                        <mat-error *ngIf=\"feesForm.get('amount').hasError('required')\">\n                                            Enter amount\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                        <mat-label>Details</mat-label>\n                                        <textarea matInput formControlName=\"details\"></textarea>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                    <div class=\"example-button-row\">\n                                        <button class=\"mr-3\" [disabled]=\"!feesForm.valid \" mat-raised-button\n                                            color=\"primary\">Submit</button>\n                                        <button mat-raised-button color=\"warn\" tabindex=\"-1\">Cancel</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FeesService } from './fees.service';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { Fees } from './fees.model';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FormDialogComponent } from './dialogs/form-dialog/form-dialog.component';\nimport { DeleteDialogComponent } from './dialogs/delete/delete.component';\nimport { DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\n@Component({\n  selector: 'app-all-fees',\n  templateUrl: './all-fees.component.html',\n  styleUrls: ['./all-fees.component.sass']\n})\nexport class AllFeesComponent implements OnInit {\n  displayedColumns = [\n    'rollNo',\n    'sName',\n    'fType',\n    'date',\n    'invoiceNo',\n    'pType',\n    'status',\n    'amount',\n    'actions'\n  ];\n  exampleDatabase: FeesService | null;\n  dataSource: ExampleDataSource | null;\n  id: number;\n  fees: Fees | null;\n  constructor(\n    public httpClient: HttpClient,\n    public dialog: MatDialog,\n    public feesService: FeesService,\n    private snackBar: MatSnackBar\n  ) {}\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild('filter', { static: true }) filter: ElementRef;\n  @ViewChild(MatMenuTrigger)\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: '0px', y: '0px' };\n\n  ngOnInit() {\n    this.loadData();\n  }\n  refresh() {\n    this.loadData();\n  }\n  addNew() {\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        fees: this.fees,\n        action: 'add'\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        // After dialog is closed we're doing frontend updates\n        // For add we're just pushing a new row inside DataService\n        this.exampleDatabase.dataChange.value.unshift(\n          this.feesService.getDialogData()\n        );\n        this.refreshTable();\n        this.showNotification(\n          'snackbar-success',\n          'Add Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  editCall(row) {\n    this.id = row.id;\n    const dialogRef = this.dialog.open(FormDialogComponent, {\n      data: {\n        fees: row,\n        action: 'edit'\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        // When using an edit things are little different, firstly we find record inside DataService by id\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          x => x.id === this.id\n        );\n        // Then you update that record using data from dialogData (values you enetered)\n        this.exampleDatabase.dataChange.value[\n          foundIndex\n        ] = this.feesService.getDialogData();\n        // And lastly refresh table\n        this.refreshTable();\n        this.showNotification(\n          'black',\n          'Edit Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  deleteItem(row) {\n    this.id = row.id;\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: row\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          x => x.id === this.id\n        );\n        // for delete we use splice in order to remove single object from DataService\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\n        this.refreshTable();\n        this.showNotification(\n          'snackbar-danger',\n          'Delete Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  private refreshTable() {\n    this.paginator._changePageSize(this.paginator.pageSize);\n  }\n  public loadData() {\n    this.exampleDatabase = new FeesService(this.httpClient);\n    this.dataSource = new ExampleDataSource(\n      this.exampleDatabase,\n      this.paginator,\n      this.sort\n    );\n    fromEvent(this.filter.nativeElement, 'keyup')\n      // .debounceTime(150)\n      // .distinctUntilChanged()\n      .subscribe(() => {\n        if (!this.dataSource) {\n          return;\n        }\n        this.dataSource.filter = this.filter.nativeElement.value;\n      });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this.snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName\n    });\n  }\n  // context menu\n  onContextMenu(event: MouseEvent, item: Fees) {\n    event.preventDefault();\n    this.contextMenuPosition.x = event.clientX + 'px';\n    this.contextMenuPosition.y = event.clientY + 'px';\n    this.contextMenu.menuData = { item: item };\n    this.contextMenu.menu.focusFirstItem('mouse');\n    this.contextMenu.openMenu();\n  }\n}\nexport class ExampleDataSource extends DataSource<Fees> {\n  _filterChange = new BehaviorSubject('');\n  get filter(): string {\n    return this._filterChange.value;\n  }\n  set filter(filter: string) {\n    this._filterChange.next(filter);\n  }\n  filteredData: Fees[] = [];\n  renderedData: Fees[] = [];\n  constructor(\n    public _exampleDatabase: FeesService,\n    public _paginator: MatPaginator,\n    public _sort: MatSort\n  ) {\n    super();\n    // Reset to the first page when the user changes the filter.\n    this._filterChange.subscribe(() => (this._paginator.pageIndex = 0));\n  }\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<Fees[]> {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const displayDataChanges = [\n      this._exampleDatabase.dataChange,\n      this._sort.sortChange,\n      this._filterChange,\n      this._paginator.page\n    ];\n    this._exampleDatabase.getAllFeess();\n    return merge(...displayDataChanges).pipe(\n      map(() => {\n        // Filter data\n        this.filteredData = this._exampleDatabase.data\n          .slice()\n          .filter((fees: Fees) => {\n            const searchStr = (\n              fees.id +\n              fees.rollNo +\n              fees.sName +\n              fees.invoiceNo\n            ).toLowerCase();\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n          });\n        // Sort filtered data\n        const sortedData = this.sortData(this.filteredData.slice());\n        // Grab the page's slice of the filtered sorted data.\n        const startIndex = this._paginator.pageIndex * this._paginator.pageSize;\n        this.renderedData = sortedData.splice(\n          startIndex,\n          this._paginator.pageSize\n        );\n        return this.renderedData;\n      })\n    );\n  }\n  disconnect() {}\n  /** Returns a sorted copy of the database data. */\n  sortData(data: Fees[]): Fees[] {\n    if (!this._sort.active || this._sort.direction === '') {\n      return data;\n    }\n    return data.sort((a, b) => {\n      let propertyA: number | string = '';\n      let propertyB: number | string = '';\n      switch (this._sort.active) {\n        case 'id':\n          [propertyA, propertyB] = [a.id, b.id];\n          break;\n        case 'rollNo':\n          [propertyA, propertyB] = [a.rollNo, b.rollNo];\n          break;\n        case 'sName':\n          [propertyA, propertyB] = [a.sName, b.sName];\n          break;\n        // case 'date': [propertyA, propertyB] = [a.date, b.date]; break;\n        case 'fType':\n          [propertyA, propertyB] = [a.fType, b.fType];\n          break;\n        case 'invoiceNo':\n          [propertyA, propertyB] = [a.invoiceNo, b.invoiceNo];\n          break;\n      }\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n      return (\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\n      );\n    });\n  }\n}\n","<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"block-header\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                    <ul class=\"breadcrumb breadcrumb-style \">\n                        <li class=\"breadcrumb-item\">\n                            <h4 class=\"page-title\">All Feess</h4>\n                        </li>\n                        <li class=\"breadcrumb-item bcrumb-1\">\n                            <a routerLink=\"/dashboard/main\">\n                                <i class=\"fas fa-home\"></i> Home</a>\n                        </li>\n                        <li class=\"breadcrumb-item bcrumb-2\">\n                            <a href=\"#\" onClick=\"return false;\">Feess</a>\n                        </li>\n                        <li class=\"breadcrumb-item active\">All</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n                    <div class=\"body\">\n                        <div class=\"responsive_table\">\n                            <div class=\"materialTableHeader\">\n                                <div class=\"row\">\n                                    <div class=\"col-8\">\n                                        <ul class=\"header-buttons-left ml-0\">\n                                            <li class=\"dropdown\">\n                                                <h2>\n                                                    <strong>Feess</strong></h2>\n                                            </li>\n                                            <li class=\"dropdown m-l-20\">\n                                                <label for=\"search-input\"><i\n                                                        class=\"material-icons search-icon\">search</i></label>\n                                                <input placeholder=\"Search\" type=\"text\" #filter\n                                                    class=\"browser-default search-field\" aria-label=\"Search box\">\n                                            </li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <ul class=\"header-buttons\">\n                                            <li>\n                                                <div class=\"icon-button-demo\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"icon-button-demo\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n                            <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\"> -->\n                                <!-- ID Column -->\n                                <ng-container matColumnDef=\"id\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\n                                </ng-container>\n                                <ng-container matColumnDef=\"rollNo\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Roll No</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                                        {{row.rollNo}}</mat-cell>\n                                </ng-container>\n                                <ng-container matColumnDef=\"sName\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Student Name</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                                        {{row.sName}}</mat-cell>\n                                </ng-container>\n                                <ng-container matColumnDef=\"fType\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Fees Type</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                                        {{row.fType }}</mat-cell>\n                                </ng-container>\n                                <ng-container matColumnDef=\"date\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                                        {{row.date | date: 'MM/dd/yyyy' }}\n                                    </mat-cell>\n                                </ng-container>\n                                <ng-container matColumnDef=\"invoiceNo\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Invoice No</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                                        {{row.invoiceNo}}</mat-cell>\n                                </ng-container>\n                                <ng-container matColumnDef=\"pType\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Payment Type</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                                        {{row.pType}}</mat-cell>\n                                </ng-container>\n                                <ng-container matColumnDef=\"status\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Status</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                                        {{row.status}}</mat-cell>\n                                </ng-container>\n                                <ng-container matColumnDef=\"amount\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>Amount\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                                        {{row.amount}}</mat-cell>\n                                </ng-container>\n                                <!-- actions -->\n                                <ng-container matColumnDef=\"actions\">\n                                    <mat-header-cell *matHeaderCellDef class=\"pr-0\">Actions</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\n                                        <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\"\n                                            (click)=\"$event.stopPropagation()\" (click)=\"editCall(row)\">\n                                            <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\n                                        </button>\n                                        <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\"\n                                            (click)=\"$event.stopPropagation()\" (click)=\"deleteItem(i, row)\">\n                                            <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\n                                        </button>\n                                    </mat-cell>\n                                </ng-container>\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\n                                    [style.cursor]=\"'pointer'\" matRipple>\n                                </mat-row>\n                            </mat-table>\n                            <!-- context menu start -->\n                            <div style=\"visibility: hidden; position: fixed\" [style.left]=\"contextMenuPosition.x\"\n                                [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\">\n                            </div>\n                            <mat-menu #contextMenu=\"matMenu\">\n                                <ng-template matMenuContent let-item=\"item\">\n                                    <button mat-menu-item (click)=\"addNew()\">\n                                        <mat-icon>add_box</mat-icon>\n                                        <span>Add Record</span>\n                                    </button>\n                                    <button mat-menu-item (click)=\"editCall(item)\">\n                                        <mat-icon>create</mat-icon>\n                                        <span>Edit Record</span>\n                                    </button>\n                                    <button mat-menu-item (click)=\"deleteItem(item)\">\n                                        <mat-icon>delete</mat-icon>\n                                        <span>Delete Record</span>\n                                    </button>\n                                    <button mat-menu-item (click)=\"refresh()\">\n                                        <mat-icon>refresh</mat-icon>\n                                        <span>Refresh Record</span>\n                                    </button>\n                                    <button mat-menu-item disabled>\n                                        <mat-icon>no_encryption</mat-icon>\n                                        <span>Disable</span>\n                                    </button>\n                                    <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu\">\n                                        <mat-icon>list_alt</mat-icon>\n                                        <span> Nested Menu</span>\n                                    </button>\n                                </ng-template>\n                            </mat-menu>\n                            <mat-menu #nestedmenu=\"matMenu\">\n                                <button mat-menu-item>\n                                    <mat-icon>mail_outline</mat-icon>\n                                    <span>Item 1</span>\n                                </button>\n                                <button mat-menu-item>\n                                    <mat-icon>call</mat-icon>\n                                    <span>Item 2</span>\n                                </button>\n                                <button mat-menu-item>\n                                    <mat-icon>chat</mat-icon>\n                                    <span>Item 3</span>\n                                </button>\n                            </mat-menu>\n                            <!-- context menu end -->\n                            <div class=\"no-results\" [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\n                                No results\n                            </div>\n                            <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\"\n                                [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\">\n                            </mat-paginator>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, Inject } from '@angular/core';\nimport { FeesService } from '../../fees.service';\n@Component({\n  selector: 'app-delete',\n  templateUrl: './delete.component.html',\n  styleUrls: ['./delete.component.sass']\n})\nexport class DeleteDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public feesService: FeesService\n  ) {}\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  confirmDelete(): void {\n    this.feesService.deleteFees(this.data.id);\n  }\n}\n","<div class=\"container\">\n    <h3 mat-dialog-title>Are you sure?</h3>\n    <div mat-dialog-content>\n        Roll No: {{data.rollNo}}\n        <p></p>\n        Name: {{data.sName}}\n        <p></p>\n        Date: {{data.date | date: 'MM/dd/yyyy'}}\n        <p></p>\n        Invoice No: {{data.invoiceNo}}\n        <p></p>\n    </div>\n    <div mat-dialog-actions>\n        <button mat-button [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">Delete</button>\n        <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n    </div>\n</div>","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, Inject } from '@angular/core';\nimport { FeesService } from '../../fees.service';\nimport {\n  FormControl,\n  Validators,\n  FormGroup,\n  FormBuilder\n} from '@angular/forms';\nimport { Fees } from '../../fees.model';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\nimport { formatDate } from '@angular/common';\n@Component({\n  selector: 'app-form-dialog',\n  templateUrl: './form-dialog.component.html',\n  styleUrls: ['./form-dialog.component.sass'],\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: 'en-GB' }]\n})\nexport class FormDialogComponent {\n  action: string;\n  dialogTitle: string;\n  feesForm: FormGroup;\n  fees: Fees;\n  constructor(\n    public dialogRef: MatDialogRef<FormDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public feesService: FeesService,\n    private fb: FormBuilder\n  ) {\n    // Set the defaults\n    this.action = data.action;\n    if (this.action === 'edit') {\n      console.log(data.fees.date);\n      this.dialogTitle = data.fees.sName;\n      this.fees = data.fees;\n    } else {\n      this.dialogTitle = 'New Fees';\n      this.fees = new Fees({});\n    }\n    this.feesForm = this.createContactForm();\n  }\n  formControl = new FormControl('', [\n    Validators.required\n    // Validators.email,\n  ]);\n  getErrorMessage() {\n    return this.formControl.hasError('required')\n      ? 'Required field'\n      : this.formControl.hasError('email')\n      ? 'Not a valid email'\n      : '';\n  }\n  createContactForm(): FormGroup {\n    return this.fb.group({\n      id: [this.fees.id],\n      rollNo: [this.fees.rollNo, [Validators.required]],\n      sName: [this.fees.sName, [Validators.required]],\n      fType: [this.fees.fType, [Validators.required]],\n      date: [\n        formatDate(this.fees.date, 'yyyy-MM-dd', 'en'),\n        [Validators.required]\n      ],\n      invoiceNo: [this.fees.invoiceNo, [Validators.required]],\n      pType: [this.fees.pType, [Validators.required]],\n      status: [this.fees.status, [Validators.required]],\n      amount: [this.fees.amount, [Validators.required]]\n    });\n  }\n  submit() {\n    // emppty stuff\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  public confirmAdd(): void {\n    this.feesService.addFees(this.feesForm.getRawValue());\n  }\n}\n","<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <div class=\"modal-about\">\n                    <div class=\"font-weight-bold p-t-5 font-17\">\n                        {{dialogTitle}}</div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <form class=\"register-form m-4\" [formGroup]=\"feesForm\" (ngSubmit)=\"submit\">\n            <div class=\"row\">\n                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Roll No</mat-label>\n                        <input matInput formControlName=\"rollNo\" required>\n                        <mat-icon matSuffix>label</mat-icon>\n                        <mat-error *ngIf=\"feesForm.get('rollNo').hasError('required')\">\n                            Please enter roll no\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Student Name</mat-label>\n                        <input matInput formControlName=\"sName\" required>\n                        <mat-icon matSuffix>account_circle</mat-icon>\n                        <mat-error *ngIf=\"feesForm.get('sName').hasError('required')\">\n                            Please enter student name\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width \" appearance=\"outline\">\n                        <mat-label>Fees Type</mat-label>\n                        <mat-select formControlName=\"fType\" required>\n                            <mat-option [value]=\"'annual'\">\n                                Annual\n                            </mat-option>\n                            <mat-option [value]=\"'tution'\">\n                                Tution\n                            </mat-option>\n                            <mat-option [value]=\"'transport'\">\n                                Transport\n                            </mat-option>\n                            <mat-option [value]=\"'exam'\">\n                                Exam\n                            </mat-option>\n                            <mat-option [value]=\"'library'\">\n                                Library\n                            </mat-option>\n                            <mat-option [value]=\"'other'\">\n                                Other\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"feesForm.get('fType').hasError('required')\">\n                            Select Fees Type\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Date</mat-label>\n                        <input matInput [matDatepicker]=\"picker1\" formControlName=\"date\" required>\n                        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n                        <mat-datepicker #picker1 touchUi></mat-datepicker>\n                        <mat-error *ngIf=\"feesForm.get('date').hasError('required')\">\n                            Please select date\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Invoice Number</mat-label>\n                        <input matInput formControlName=\"invoiceNo\" required>\n                        <mat-icon matSuffix>receipt</mat-icon>\n                        <mat-error *ngIf=\"feesForm.get('invoiceNo').hasError('required')\">\n                            Enter Invoice Number\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                        <mat-label>Payment Type</mat-label>\n                        <mat-select formControlName=\"pType\" required>\n                            <mat-option [value]=\"'cash'\">\n                                Cash\n                            </mat-option>\n                            <mat-option [value]=\"'cheque'\">\n                                Cheque\n                            </mat-option>\n                            <mat-option [value]=\"'online transfer'\">\n                                Online Transfer\n                            </mat-option>\n                            <mat-option [value]=\"'credit card'\">\n                                Draft\n                            </mat-option>\n                            <mat-option [value]=\"'other'\">\n                                Other\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"feesForm.get('pType').hasError('required')\">\n                            Select Payment Type\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                        <mat-label>Status</mat-label>\n                        <mat-select formControlName=\"status\" required>\n                            <mat-option [value]=\"'paid'\">\n                                Paid\n                            </mat-option>\n                            <mat-option [value]=\"'unpaid'\">\n                                Unpaid\n                            </mat-option>\n                            <mat-option [value]=\"'pending'\">\n                                Pending\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"feesForm.get('status').hasError('required')\">\n                            Select Status\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Amount</mat-label>\n                        <input matInput formControlName=\"amount\" required>\n                        <mat-icon matSuffix>monetization_on</mat-icon>\n                        <mat-error *ngIf=\"feesForm.get('amount').hasError('required')\">\n                            Enter amount\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                    <div class=\"example-button-row\">\n                        <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!feesForm.valid\"\n                            [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\n                        <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { formatDate } from '@angular/common';\r\nexport class Fees {\r\n  id: number;\r\n  rollNo: string;\r\n  sName: string;\r\n  fType: string;\r\n  date: string;\r\n  invoiceNo: string;\r\n  pType: string;\r\n  status: string;\r\n  amount: string;\r\n  department: string;\r\n  duration: string;\r\n  details: string;\r\n  constructor(fees) {\r\n    {\r\n      this.id = fees.id || this.getRandomID();\r\n      this.rollNo = fees.rollNo || '';\r\n      this.sName = fees.sName || '';\r\n      this.fType = fees.fType || '';\r\n      this.date = formatDate(new Date(), 'yyyy-MM-dd', 'en') || '';\r\n      this.invoiceNo = fees.invoiceNo || '';\r\n      this.pType = fees.pType || '';\r\n      this.status = fees.status || '';\r\n      this.amount = fees.amount || '';\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-edit-fees',\n  templateUrl: './edit-fees.component.html',\n  styleUrls: ['./edit-fees.component.sass']\n})\nexport class EditFeesComponent {\n  feesForm: FormGroup;\n  formdata = {\n    rollNo: '99',\n    sName: 'Jenish Shah\t',\n    fType: 'annual',\n    department: 'mathematics',\n    date: '2020-01-04T14:22:18Z',\n    invoiceNo: 'IN-434454',\n    pType: 'cheque',\n    status: 'paid',\n    amount: '320$',\n    duration: 'yearly',\n    details: 'Annual Tution Fees'\n  };\n  constructor(private fb: FormBuilder) {\n    this.feesForm = this.createContactForm();\n  }\n  onSubmit() {\n    console.log('Form Value', this.feesForm.value);\n  }\n  createContactForm(): FormGroup {\n    return this.fb.group({\n      rollNo: [this.formdata.rollNo, [Validators.required]],\n      sName: [this.formdata.sName, [Validators.required]],\n      fType: [this.formdata.fType, [Validators.required]],\n      department: [this.formdata.department, [Validators.required]],\n      date: [this.formdata.date, [Validators.required]],\n      invoiceNo: [this.formdata.invoiceNo, [Validators.required]],\n      pType: [this.formdata.pType, [Validators.required]],\n      status: [this.formdata.status, [Validators.required]],\n      amount: [this.formdata.amount, [Validators.required]],\n      duration: [this.formdata.duration, [Validators.required]],\n      details: [this.formdata.details]\n    });\n  }\n}\n","<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"block-header\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                    <ul class=\"breadcrumb breadcrumb-style \">\n                        <li class=\"breadcrumb-item\">\n                            <h4 class=\"page-title\">Fees</h4>\n                        </li>\n                        <li class=\"breadcrumb-item bcrumb-1\">\n                            <a routerLink=\"/dashboard/main\">\n                                <i class=\"fas fa-home\"></i> Home</a>\n                        </li>\n                        <li class=\"breadcrumb-item bcrumb-2\">\n                            <a href=\"#\" onClick=\"return false;\">Fees</a>\n                        </li>\n                        <li class=\"breadcrumb-item active\">Edit Fees Details</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <div class=\"row clearfix\">\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                <div class=\"card\">\n                    <div class=\"header\">\n                        <h2>Edit Fees Details</h2>\n                        <ul class=\"header-dropdown m-r--5\">\n                            <li class=\"dropdown\">\n                                <a href=\"#\" onClick=\"return false;\" data-toggle=\"dropdown\" role=\"button\"\n                                    aria-haspopup=\"true\" aria-expanded=\"false\">\n                                    <i class=\"material-icons\">more_vert</i>\n                                </a>\n                                <ul class=\"dropdown-menu pull-right\">\n                                    <li>\n                                        <a href=\"#\" onClick=\"return false;\">Action</a>\n                                    </li>\n                                    <li>\n                                        <a href=\"#\" onClick=\"return false;\">Another action</a>\n                                    </li>\n                                    <li>\n                                        <a href=\"#\" onClick=\"return false;\">Something else here</a>\n                                    </li>\n                                </ul>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class=\"body\">\n                        <form class=\"register-form m-4\" [formGroup]=\"feesForm\" (ngSubmit)=\"onSubmit()\">\n                            <div class=\"row\">\n                                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                        <mat-label>Roll No</mat-label>\n                                        <input matInput formControlName=\"rollNo\" required>\n                                        <mat-icon matSuffix>label</mat-icon>\n                                        <mat-error *ngIf=\"feesForm.get('rollNo').hasError('required')\">\n                                            Please enter roll no\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                        <mat-label>Student Name</mat-label>\n                                        <input matInput formControlName=\"sName\" required>\n                                        <mat-icon matSuffix>account_circle</mat-icon>\n                                        <mat-error *ngIf=\"feesForm.get('sName').hasError('required')\">\n                                            Please enter student name\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                        <mat-label>Select Department</mat-label>\n                                        <mat-select formControlName=\"department\" required>\n                                            <mat-option [value]=\"'mechanical'\">\n                                                Mechanical\n                                            </mat-option>\n                                            <mat-option [value]=\"'science'\">\n                                                Science\n                                            </mat-option>\n                                            <mat-option [value]=\"'mathematics'\">\n                                                Mathematics\n                                            </mat-option>\n                                            <mat-option [value]=\"'computer'\">\n                                                Computer\n                                            </mat-option>\n                                        </mat-select>\n                                        <mat-error *ngIf=\"feesForm.get('department').hasError('required')\">\n                                            Select Any Department\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width \" appearance=\"outline\">\n                                        <mat-label>Fees Type</mat-label>\n                                        <mat-select formControlName=\"fType\" required>\n                                            <mat-option [value]=\"'annual'\">\n                                                Annual\n                                            </mat-option>\n                                            <mat-option [value]=\"'tution'\">\n                                                Tution\n                                            </mat-option>\n                                            <mat-option [value]=\"'transport'\">\n                                                Transport\n                                            </mat-option>\n                                            <mat-option [value]=\"'exam'\">\n                                                Exam\n                                            </mat-option>\n                                            <mat-option [value]=\"'library'\">\n                                                Library\n                                            </mat-option>\n                                            <mat-option [value]=\"'other'\">\n                                                Other\n                                            </mat-option>\n                                        </mat-select>\n                                        <mat-error *ngIf=\"feesForm.get('fType').hasError('required')\">\n                                            Select Fees Type\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                    <div class=\"m-b-20\">\n                                        <mat-label class=\"mr-3\">Duration:</mat-label>\n                                        <mat-radio-group aria-label=\"Select duration\" formControlName=\"duration\"\n                                            required>\n                                            <mat-radio-button value=\"monthly\">Monthly</mat-radio-button>\n                                            <mat-radio-button value=\"yearly\">Yearly</mat-radio-button>\n                                            <mat-radio-button value=\"session\">Session</mat-radio-button>\n                                            <mat-error *ngIf=\"feesForm.get('duration').hasError('required')\">\n                                                Select Duration\n                                            </mat-error>\n                                        </mat-radio-group>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                        <mat-label>Collection Date</mat-label>\n                                        <input matInput [matDatepicker]=\"picker1\" formControlName=\"date\" required>\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n                                        <mat-datepicker #picker1 touchUi></mat-datepicker>\n                                        <mat-error *ngIf=\"feesForm.get('date').hasError('required')\">\n                                            Please select date\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                        <mat-label>Payment Type</mat-label>\n                                        <mat-select formControlName=\"pType\" required>\n                                            <mat-option [value]=\"'cash'\">\n                                                Cash\n                                            </mat-option>\n                                            <mat-option [value]=\"'cheque'\">\n                                                Cheque\n                                            </mat-option>\n                                            <mat-option [value]=\"'online transfer'\">\n                                                Online Transfer\n                                            </mat-option>\n                                            <mat-option [value]=\"'credit card'\">\n                                                Draft\n                                            </mat-option>\n                                            <mat-option [value]=\"'other'\">\n                                                Other\n                                            </mat-option>\n                                        </mat-select>\n                                        <mat-error *ngIf=\"feesForm.get('pType').hasError('required')\">\n                                            Select Status\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                        <mat-label>Invoice Number</mat-label>\n                                        <input matInput formControlName=\"invoiceNo\" required>\n                                        <mat-icon matSuffix>receipt</mat-icon>\n                                        <mat-error *ngIf=\"feesForm.get('invoiceNo').hasError('required')\">\n                                            Enter Invoice Number\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                        <mat-label>Status</mat-label>\n                                        <mat-select formControlName=\"status\" required>\n                                            <mat-option [value]=\"'paid'\">\n                                                Paid\n                                            </mat-option>\n                                            <mat-option [value]=\"'unpaid'\">\n                                                Unpaid\n                                            </mat-option>\n                                            <mat-option [value]=\"'pending'\">\n                                                Pending\n                                            </mat-option>\n                                        </mat-select>\n                                        <mat-error *ngIf=\"feesForm.get('status').hasError('required')\">\n                                            Select Status\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                        <mat-label>Amount</mat-label>\n                                        <input matInput formControlName=\"amount\" required>\n                                        <mat-icon matSuffix>monetization_on</mat-icon>\n                                        <mat-error *ngIf=\"feesForm.get('amount').hasError('required')\">\n                                            Enter amount\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                        <mat-label>Details</mat-label>\n                                        <textarea matInput formControlName=\"details\"></textarea>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                    <div class=\"example-button-row\">\n                                        <button class=\"mr-3\" [disabled]=\"!feesForm.valid \" mat-raised-button\n                                            color=\"primary\">Submit</button>\n                                        <button mat-raised-button color=\"warn\" tabindex=\"-1\">Cancel</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fee-receipt',\n  templateUrl: './fee-receipt.component.html',\n  styleUrls: ['./fee-receipt.component.sass']\n})\nexport class FeeReceiptComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"block-header\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                    <ul class=\"breadcrumb breadcrumb-style \">\n                        <li class=\"breadcrumb-item\">\n                            <h4 class=\"page-title\">Receipt</h4>\n                        </li>\n                        <li class=\"breadcrumb-item bcrumb-1\">\n                            <a routerLink=\"/dashboard/main\">\n                                <i class=\"fas fa-home\"></i> Home</a>\n                        </li>\n                        <li class=\"breadcrumb-item bcrumb-2\">\n                            <a href=\"#\" onClick=\"return false;\">Fees</a>\n                        </li>\n                        <li class=\"breadcrumb-item active\">Receipt</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <div class=\"row clearfix\">\n            <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <div class=\"card\">\n                    <div class=\"body\">\n                        <div class=\"row\">\n                            <div class=\"col-md-12\">\n                                <div class=\"white-box\">\n                                    <h3>\n                                        <b>RECEIPT</b>\n                                        <span class=\"pull-right\">#345766</span>\n                                    </h3>\n                                    <hr>\n                                    <div class=\"row\">\n                                        <div class=\"col-md-12\">\n                                            <div class=\"pull-left\">\n                                                <address>\n                                                    <p class=\"font-bold\">BILL FROM :</p>\n                                                    <img src=\"assets/images/invoice_logo.png\" alt=\"logo\"\n                                                        class=\"logo-default\" />\n                                                    <p class=\"text-muted m-l-5\">\n                                                        Aditya University, <br> Opp. Town Hall, <br>\n                                                        Sardar Patel Road, <br> Ahmedabad - 380015\n                                                    </p>\n                                                </address>\n                                            </div>\n                                            <div class=\"pull-right text-right\">\n                                                <address>\n                                                    <p class=\"addr-font-h3 font-bold\">BILL TO :</p>\n                                                    <p class=\"font-bold addr-font-h4\">Jayesh Patel</p>\n                                                    <p class=\"text-muted m-l-30\">\n                                                        207, Prem Sagar Appt.,\n                                                        <br> Near Income Tax Office,\n                                                        <br> Ashram Road,\n                                                        <br> Ahmedabad - 380057\n                                                    </p>\n                                                    <p class=\"m-t-30\">\n                                                        <b>Invoice Date :</b>\n                                                        <i class=\"ml-2 fa fa-calendar\"></i> 14th July 2019\n                                                    </p>\n                                                    <p>\n                                                        <b>Status :</b>\n                                                        <span class=\"label col-green font-weight-bold\">paid</span>\n                                                    </p>\n                                                </address>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-md-12\">\n                                            <div class=\"table-responsive m-t-40\">\n                                                <table class=\"table table-hover\">\n                                                    <thead>\n                                                        <tr>\n                                                            <th class=\"text-center\">#</th>\n                                                            <th class=\"text-right\">Fees Type</th>\n                                                            <th class=\"text-right\">Frequency</th>\n                                                            <th class=\"text-right\">Date</th>\n                                                            <th class=\"text-right\">Invoice number</th>\n                                                            <th class=\"text-right\">Amount</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        <tr>\n                                                            <td class=\"text-center\">1</td>\n                                                            <td class=\"text-right\">Annual Fees</td>\n                                                            <td class=\"text-right\">Yearly</td>\n                                                            <td class=\"text-right\">2016-11-19</td>\n                                                            <td class=\"text-right\">#IN-345609865</td>\n                                                            <td class=\"text-right\">$100</td>\n                                                        </tr>\n                                                        <tr>\n                                                            <td class=\"text-center\">2</td>\n                                                            <td class=\"text-right\">Tuition Fees</td>\n                                                            <td class=\"text-right\">Monthly</td>\n                                                            <td class=\"text-right\">2016-11-19</td>\n                                                            <td class=\"text-right\">#IN-345604565</td>\n                                                            <td class=\"text-right\">$50</td>\n                                                        </tr>\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-md-12\">\n                                            <div class=\"pull-right m-t-30 text-right\">\n                                                <p>Sub - Total amount: $150</p>\n                                                <p>Discount : $10 </p>\n                                                <p>Tax (10%) : $14 </p>\n                                                <hr>\n                                                <h3><b>Total :</b> $164</h3>\n                                            </div>\n                                            <div class=\"clearfix\"></div>\n                                            <hr>\n                                            <div class=\"text-right\">\n                                                <button mat-raised-button color=\"primary\"> Proceed to payment\n                                                </button>\n                                                <button onclick=\"javascript:window.print();\"\n                                                    class=\"btn btn-default btn-outline\" type=\"button\"> <span><i\n                                                            class=\"fa fa-print\"></i> Print</span> </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AllFeesComponent } from './all-fees/all-fees.component';\nimport { AddFeesComponent } from './add-fees/add-fees.component';\nimport { EditFeesComponent } from './edit-fees/edit-fees.component';\nimport { FeeReceiptComponent } from './fee-receipt/fee-receipt.component';\n\nconst routes: Routes = [\n  {\n    path: 'all-fees',\n    component: AllFeesComponent\n  },\n  {\n    path: 'add-fees',\n    component: AddFeesComponent\n  },\n  {\n    path: 'edit-fees',\n    component: EditFeesComponent\n  },\n  {\n    path: 'fee-receipt',\n    component: FeeReceiptComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FeesRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { FeesRoutingModule } from './fees-routing.module';\nimport { AllFeesComponent } from './all-fees/all-fees.component';\nimport { AddFeesComponent } from './add-fees/add-fees.component';\nimport { EditFeesComponent } from './edit-fees/edit-fees.component';\nimport { FeeReceiptComponent } from './fee-receipt/fee-receipt.component';\nimport { DeleteDialogComponent } from './all-fees/dialogs/delete/delete.component';\nimport { FormDialogComponent } from './all-fees/dialogs/form-dialog/form-dialog.component';\n\n@NgModule({\n  declarations: [\n    AllFeesComponent,\n    AddFeesComponent,\n    EditFeesComponent,\n    FeeReceiptComponent,\n    DeleteDialogComponent,\n    FormDialogComponent\n  ],\n  imports: [\n    CommonModule,\n    FeesRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxDatatableModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDialogModule,\n    MatSortModule,\n    MatToolbarModule,\n    MatCheckboxModule,\n    MatTabsModule,\n    MatSelectModule,\n    MaterialFileInputModule,\n    MatDatepickerModule,\n    MatMenuModule,\n    MatRadioModule\n  ]\n})\nexport class FeesModule {}\n"]}